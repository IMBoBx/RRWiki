{
  "default": {
    "classic": {
      "kill": {
        "0": "{p1} killed {p2}, what a nub.",
        "1": "{p1} killed {p2}! What a bloodbath!",
        "2": "{p1} broke {p2}\u2019s spine by throwing {p2_2} off a cliff.",
        "3": "Look! {p1} killed {p2} with a rock!",
        "4": "{p1} backstabbed {p2} while {p2_1} {p2_w} sleeping! Unfortunate team.",
        "5": "{p1} killed {p2}, get rekt.",
        "6": "{p1} killed {p2}, Git Gud.",
        "7": "{p1} snapped {p2}\u2019s neck while {p2_1} {p2_w} sleeping. Good night!",
        "8": "{p1} killed {p2}, \"I came, I saw , You died.\"",
        "9": "{p1} brutally murdered {p2}.",
        "10": "{p1} killed {p2}, \"Say hello to my little friend!\"",
        "11": "{p1} killed {p2} in a truly shocking way.",
        "12": "{p1} broke {p2}\u2019s neck while {p2_1} {p2_w} sleeping. They were a good team.",
        "13": "{p1} had faster fingers than {p2}.",
        "14": "{p1} got into a knife fight with {p2} and killed {p2_2}.",
        "15": "{p1} stabbed {p2} with a cucumber. What an unfortunate series of events!",
        "16": "Did {p1} just kill {p2} with a stick? How gruesome.",
        "17": "{p1} sneezed and killed an unvaccinated {p2}.",
        "18": "{p1} broke {p2}\u2019s kneecaps and left {p2_2} for dead; {p2_1} {p2_w} later eaten by scavengers.",
        "19": "{p1} dosed {p2}\u2019s meal with a slow-acting poison. Bye!",
        "20": "{p1} created a makeshift bomb and hid it in {p2}\u2019s supplies disguised as bread. It exploded and killed {p2_2} when {p2_1} tried to take a bite.",
        "21": "{p1} bludgeoned {p2} to death using someone else\u2019s severed leg.",
        "22": "{p1} slipped a python into {p2}\u2019s sleeping bag. In the morning, {p1_1} pretended to be surprised as {p2_1} {p2_w} found half-consumed.",
        "23": "{p1} ate {p2}."
      },
      "death": {
        "0": "{p1} killed themself, lol.",
        "1": "{p1} died of foodpoisoning! That\u2019s unfortunate.",
        "2": "{p1} should not have eaten those berries.",
        "3": "{p1} tripped and cracked {p1_3} skull on a brick.",
        "4": "{p1} swam in a river infested with leeches. We can all guess how that ended.",
        "5": "{p1} fell from a high place.",
        "6": "{p1} tried to swim in lava.",
        "7": "{p1} tried to divide by zero and died when reality flipped inside out.",
        "8": "It\u2019s really too bad that {p1} thought those piranhas were friendly but strange fish...RIP.",
        "9": "{p1} misjudged the depth of the water and tried to dive in head-first, {p1_1} cracked {p1_3} skull on the bottom.",
        "10": "{p1} thought {p1_1} would try to ride a horse but ended up with a broken neck instead. Bye bye!",
        "11": "{p1} wanted out so badly {p1_1} ate a poisonous tree frog.",
        "12": "{p1} climbed too high up a tree and stepped on a rotten branch, {p1_1} died of fall damage.",
        "13": "{p1} spun too hard and died of toxicity.",
        "14": "{p1} speedily adventured down a cliff.",
        "15": "{p1} died of laughter.",
        "16": "{p1} died of HIV.",
        "17": "{p1} was killed by a puppy."

      },
      "bow": {
        "0": "{p1} killed {p2} with {p1_3} {item} by trying to shoot an apple off {p2_3} head, but {p1_1} missed.",
        "1": "Did {p1} just hit a no-scope with {p1_3} {item} on {p2}? What a champ!",
        "2": "{p1} used {p1_3} {item} and shot an arrow straight through the heart of {p2}.",
        "3": "{p1} missed {p1_3} first two {item} shots, but the third arrow killed {p2}.",
        "4": "{p1} found {p2} sleeping on the ground and shot them with {p1_3} {item}",
        "5": "{p1} shot {p2} with {p1_3} {item}, \"Hey oops, didn\u2019t see you there, I was aiming for the person behind you.\"",
        "6": "{p1} pierced {p2} with {p1_3} {item}."
      },
      "dagger": {
        "0": "{p1} slaughtered {p2} with {p1_3} {item}.",
        "1": "{p1} sneaked up on {p2} with {p1_3} {item}, whilst {p2_1} {p2_w} putting up {p2_3} tent. RIP.",
        "2": "{p1} shanked {p2} multiple times in the chest with {p1_3} {item}. F.",
        "3": "{p1} shanked {p2} with {p1_3} {item} while {p2_1} {p2_w} trying to make a fire.",
        "4": "{p1}\u2019s {item} choked {p2}.",
        "5": "{p1} drew {p1_3} {item} at {p2}, {p2_1} never saw the day.",
        "6": "{p1} backstabbed {p2}, with {p1_3} {item} and words.",
        "7": "{p1} tore {p2}\u2019s mouth open with {p1_3} {item} while {p2_1} {p2_w} yawning. Successful assassination.",
        "8": "{p1} hit {p2} on the solar plexus with the back of the {item}.",
        "9": "{p1} accidentally stabbed {p2} in the stomach with {p1_3} {item} while giving {p2_2} a hug.",
        "10": "{p1} sliced {p2}\u2019s head off with the blunt side of the {item}. What a skill!",
        "11": "{p1} skinned {p2} alive with {p1_3} {item}, trying to get {p1_3} stolen apple back from the person\u2019s stomach.",
        "12": "{p1} stabbed {p2} in the heart with {p1_3} {item}. \" The sponsor wanted you dead.\"",
        "13": "{p1} stabbed 24 {item}s into {p2}\u2019s, making {p2_2} a human pincushion.",
        "14": "{p1} poked {p2} deeply in between the eyes with a {item}."
      },
      "knife": {
        "0": "{p1} slaughtered {p2} with {p1_3} {item}.",
        "1": "{p1} threw a crazy throwing {item} at {p2}, thus killing {p2_2}.",
        "2": "{p1} sneaked up on {p2} with {p1_3} {item} while {p2_1} {p2_w} putting up their tent. RIP.",
        "3": "{p1} shanked {p2} multiple times in the chest with {p1_3} {item}.",
        "4": "{p1} shanked {p2} with {p1_3} {item} while {p2_1} {p2_w} trying to make a fire.",
        "5": "{p1} stabbed and choked {p2} with {p1_3} {item} after {p2_1} tried to run away from {p1_2}.",
        "6": "{p1} stabbed {p2} 234 times with {p1_3} {item}.",
        "7": "{p1}\u2019s {item} choked {p2}.",
        "8": "{p1} threw {p1_3} {item} at {p2}, {p2_1} never saw the light of day."
      },
      "wolf": {
        "0": "{p1}\u2019s {item} bit {p2}\u2019s head off.",
        "1": "{p1}\u2019s {item} fatally injured {p2}, thus killing {p2_2}.",
        "2": "{p1}\u2019s {item} chased after {p2} and bit {p2_2} to death.",
        "3": "{p1}\u2019s {item} brutally slaughtered {p2} with their sharp teeth.",
        "4": "After a long chase {p1}\u2019s {item} finally caught up to {p2} and bit {p2_2} to death.",
        "5": "{p1}\u2019s {item} Charlie bit {p2}. F."
      },
      "machete": {
        "0": "After a long battle, {p1} finally killed {p2} with {p1_3} {item}.",
        "1": "{p1} shanked {p2} with {p1_3} {item}.",
        "2": "{p1} cut through {p2} with {p1_3} {item}, as if {p2_1} {p2_w} a vine.",
        "3": "{p1} dropped a {item} from {p1_3} sweaty palms, which landed on {p2}\u2019s head who was 100 meters down the gorge.",
        "4": "{p1} swung {p1_3} {item} and killed {p2} as an act of self defense.",
        "5": "{p1} slapped {p2} off the cliff with the flat side of {p1_3} {item}.",
        "6": "The sadistic {p1} was torturing the innocent {p2} with a blunt {item}. How excruciating!",
        "7": "{p1} was juggling 4 {item}s at once and dropped one, which chopped {p2}\u2019s body in half.",
        "8": "{p1} ambushed {p2} from {p2_3} back with {p1_3} {item}.. {p1_1} looted {p2_3} corpse too!"
      },
      "spear": {
        "0": "{p1} put a {item} through {p2}\u2019s heart.",
        "1": "One simple {item} thrust to the abdomen was all it took for {p1} to kill {p2}.",
        "2": "With incredible aim, {p1} threw a {item} straight through {p2}\u2019s body.",
        "3": "{p1} staked {p2} with {p1_3} {item}.",
        "4": "{p1} got launched {p1_3} {item} across the arena. It just so happened to hit {p2}."
      },
      "axe": {
        "0": "{p1} used their immense knowledge of physics to throw {p1_3} {item} in {p2}\u2019s skull.",
        "1": "{p1} used {p1_3} {item} to cut down a tree for firewood. The tree fell on {p2}.",
        "2": "{p1} found {p2} sleeping and decided to behead {p2_2} with {p1_3} {item}",
        "3": "With great skill, {p1} dropped {p1_3} {item} off a cliff. It hit {p2} right in the head.",
        "4": "{p1} tried to hit a bullseye with {p1_3} {item}, but it bounced back and hit {p2} instead!"
      },
      "revive": {
        "0": "{p1} got revived by god.",
        "1": "{p1} is back in the battle.",
        "2": "{p1} was resurrected after suffering an unjustified death.",
        "3": "The population of heaven has just decreased, because {p1} is back in the game!",
        "4": "{p1} was faking {p1_3} death. Surprise, surprise!."
      },
      "life": {
        "0": "{p1} received water supply. The fans love {p1_2}!",
        "1": "{p1} received food and water from an unknown sponsor.",
        "2": "{p1} went fishing for food.",
        "3": "{p1} found a lake and decided to set up {p1_3} camp.",
        "4": "{p1} left {p1_3} supplies behind.",
        "5": "{p1} caught themselves a nice meal!",
        "6": "{p1} stopped to smell the flowers.",
        "7": "{p1} tiptoed through the tulips.",
        "8": "{p1} set traps for food, but didn\u2019t manage to catch anything.",
        "9": "{p1} successfully hunted a deer!",
        "10": "{p1} heard someone walking near {p1_2}.",
        "11": "{p1} had a calm day wandering through the forest, unaware that {p1_1} {p1_w} being followed.",
        "12": "{p1} found some edible berries.",
        "13": "When {p1} woke up in the morning, {p1_1} {p1_w} surprised to find a small package of food beside {p1_2}."
      },
      "get_bow": {
        "0": "{p1} made a __{item}__ from some sticks and vines.",
        "1": "{p1} found a __{item}__.",
        "2": "{p1} found a __{item}__ next to a skeleton.",
        "3": "{p1} recieved a new __{item}__ from {p1_3} sponsors",
        "4": "{p1} made a __{item}__ out of bone and hair! Ew..."
      },
      "get_dagger": {
        "0": "{p1} found a __{item}__.",
        "1": "{p1} got a __{item}__ from a sponsor.",
        "2": "{p1} found a __{item}__ stuck in an animal.",
        "3": "{p1} sharpened some bone into a __{item}__!",
        "4": "{p1} took a __{item}__ from the corpse of {p1_3}."
      },
      "get_machete": {
        "0": "{p1} found a __{item}__.",
        "1": "{p1} got a __{item}__ from a sponsor.",
        "2": "{p1} found a sharp and new __{item}__ while looking for food. That\u2019ll be handy!",
        "3": "{p1} took a __{item}__ from the hand of a corpse.",
        "4": "{p1} found a rusty __{item}__ on the ground."
      },
      "get_wolf": {
        "0": "{p1} tamed a __{item}__ with some bones.",
        "1": "{p1} fed a starving __{item}__ and they became best friends.",
        "2": "{p1} came across a __{item}__ and decided to tame it.",
        "3": "After fighting for hours, {p1} made friends with the __{item}__.",
        "4": "{p1} shared some of {p1_3} dinner with a __{item}__, which joined {p1_2} afterwards!"
      },
      "get_spear": {
        "0": "{p1} found a __{item}__ wedged into a tree.",
        "1": "Out of nowhere, a __{item}__ landed next to {p1}.",
        "2": "{p1} crafted a __{item}__ out of a stick and a rock.",
        "3": "{p1} discovered how to make a __{item}__ with new materials.",
        "4": "{p1} found a __{item}__ in an abandoned camp!"
      },
      "get_axe": {
        "0": "{p1} found a __{item}__ in the bark of a nearby tree.",
        "1": "{p1} won a lumberjack competition and recieved a __{item}__ as a prize!",
        "2": "{p1} made a __{item}__ from a sharp rock and a stick.",
        "3": "{p1} narrowly dodged a __{item}__ that fell from the sky. Where did it come from?",
        "4": "A sponsor took pity on {p1} and sent {p1_2} a __{item}__."
      }
    },
    "modern": {
      "kill": {
        "0": "{p1} picked up a sharp rock and slit {p2}\u2019s throat.",
        "1": "{p1} ran over {p2} with {p1_3} monster truck.",
        "2": "{p1} killed {p2} and spat on {p2_3} dead body.",
        "3": "{p1} body slammed {p2} on the ground and broke {p2_3} ribs.",
        "4": "{p1} incapacitated {p2} with a strong drug and proceeded to brutally murder {p2_2}.",
        "5": "{p1} was being chased by {p2}. Oh, how the tables turned when the chaser fell into a pit of spikes.",
        "6": "{p1} trapped {p2} in an automated revolving door, {p2_1} ran out of air to breath.",
        "7": "{p1} set one whole building on fire. There weren\u2019t even bones left from {p2}\u2019s remains.",
        "8": "{p1} slammed {p2} with a wooden door.",
        "9": "{p1} threw a whole container of acid directly on {p2}. There was nothing left of {p2_3} remains.",
        "10": "{p1} pushed {p2} off a twenty story building.",
        "11": "{p1} hypnotized {p2}, securing {p1_2} an easy kill.",
        "12": "{p1} locked {p2} in a freezer room of an empty restaurant, {p2_1} died from hypothermia.",
        "13": "{p1} cannibalized on {p2} while {p2_1} {p2_w} searching for food.",
        "14": "{p1} threw {p2} in the air, {p2_3} head was chopped off by a ceiling fan.",
        "15": "{p1} dropped a couch from a high building and it landed directly on top of {p2}. R.I.P."
      },
      "death": {
        "0": "{p1} set up {p1_3} camp on a tall tree, but ended up falling down and shattering every bone in {p1_3} body.",
        "1": "{p1} went skydiving but forgot to use {p1_3} parachute.",
        "2": "{p1} went on a cruise, but the ship struck the iceberg. How traumatic!.",
        "3": "{p1} was struck by lightning, {p1_1} died of cardiac arrest not long after the incident.",
        "4": "{p1} was voted out by the sponsors for being idle.",
        "5": "{p1} was too anxious to get out, {p1_1} died of starvation.",
        "6": "{p1} was trapped in the elevator, {p1_1} survived for 3 days without food but {p1_1} eventually reached {p1_3} limit.",
        "7": "{p1} slipped on a paper towel and hit {p1_3} head on the floor, {p1_1} died from a severe concussion.",
        "8": "{p1} was caught going to the park during quarantine, {p1_1} {p1_w} quickly dispatched.",
        "9": "{p1} went for a jog but died of exhaustion. The lack of water in the city didn\u2019t help with that."
      },
      "knife": {
        "0": "{p1} stabbed {p2} with {p1_3} {item}.",
        "1": "{p1} used {p1_3} {item} to puncture {p2}\u2019s heart.",
        "2": "{p1} drained {p2}\u2019s blood with multiple jabs of {p1_3} {item}.",
        "3": "The blood was gushing out when {p1} made a deep cut on {p2}\u2019s artery with {p1_3} {item}.",
        "4": "The {item} that {p1} threw embedded itself in {p2}\u2019s skull.",
        "5": "{p1} stabbed {p1_3} {item} deep into the bone as {p2} wailed out in pain.",
        "6": "{p1} launched {p1_3} {item} at {p2}, killing {p2_2}.",
        "7": "{p1} pinned {p2} to the wall with a {item}.",
        "8": "{p1} threw a {item} and it slashed {p2}\u2019s windpipe.",
        "9": "{p1} was in a team until {p1_1} back-stabbed {p2} with a single stab of {p1_3} {item}."
      },
      "pistol": {
        "0": "{p1} fired a few rounds of shots with {p1_3} {item} before finally hitting {p2} on the forehead.",
        "1": "{p1} fired a {item} at {p2}\u2019s abdomen, rupturing {p2_3} internal organs.",
        "2": "{p1} fired a {item} at point-blank range. It destroyed {p2}\u2019s skull completely.",
        "3": "{p1} killed {p2} with {p1_3} {item}. The bullet ricocheted off of a metal pipe and hit {p2_2} right in {p2_3} heart.",
        "4": "{p1} knocked {p2} unconscious with a {item} whip. It caused a cerebral hemorrhage on {p2_2}.",
        "5": "{p1} knocked {p2} out with a tranquiliser dart fired from {p1_3} {item} and brutally choked {p2_2} to death.",
        "6": "{p1} drew {p1_3} {item} faster than {p2} and domed {p2_2} with {p2_3} pistol."
      },
      "sniper": {
        "0": "{p1} domed {p2} with {p1_3} {item}.",
        "1": "{p1} looked through the {item} scope and pulled the trigger, it was too late for {p2}.",
        "2": "{p1} zeroed in on {p2} with {p1_3} {item} and fired.",
        "3": "It only took {p1}\u2019s {item} bullet 1 second to reach {p2}\u2019s heart.",
        "4": "{p1} used the butt of {p1_3} {item} to club {p2} to death.",
        "5": "{p1} took trickshotting to a new level by no-scoping {p2} with {p1_3} {item}.",
        "6": "Call {p1} the American {item}, as {p1_1} shot {p2} from over 1000 yards.",
        "7": "{p1} put a bullet into {p2}\u2019s hand, foot, knee and elbow before finally putting a {item} bullet in {p2_3} head.",
        "8": "{p1} showed no remorse to {p2} as {p1_1} pulled the trigger of {p1_3} {item}.",
        "9": "{p1} led {p2} right into the scope of {p1_3} {item} with some bait."
      },
      "taser": {
        "0": "{p1} shot {p2} with {p1_3} {item}, and chocked {p2_2} to death.",
        "1": "{p1} shot {p2} with {p1_3} {item}, {p2_2} died on the spot.",
        "2": "Pffff {p1}\u2019s {item} had too much voltage going through it. Yikes. Bye {p2}",
        "3": "BANG. TZTZTZTZ. {p1}\u2019s {item} made {p2} fall to the ground. RIP.",
        "4": "OMG. {p1}\u2019s {item} shot hit {p2} right in {p2_3} heart."
      },
      "rocket": {
        "0": "{p1} shot a rocket into {p2} with a {item}, thus brutally destroying {p2_3} body.",
        "1": "{p1} killed {p2} with a bang using {p1_3} {item}",
        "2": "Because of {p1}\u2019s {item}, {p2} was never to be found again.",
        "3": "3, 2, 1, FIRE!. {p1}\u2019s {item} absolutely annihilated {p2}.",
        "4": "{p1} fired {p1_3} {item} into the sky. {p2} was standing behind {p1_2} and got roasted by the backblast!"
      },
      "bat": {
        "0": "{p1} smashed {p2} into pieces with {p1_3} {item}.",
        "1": "{p1}\u2019s {item} crushed {p2} into pieces. Is that a grandslam?",
        "2": "{p1} went for the homerun and smashed {p2} to death with {p1_3} {item}",
        "3": "{p1}\u2019s {item} crushed {p2} into a million pieces.",
        "4": "Ohhh no. {p1} confused {p2}\u2019s head with a ball. The {item} killed {p2_2} immediately."
      },
      "revive": {
        "0": "{p1} had stored {p1_2} consciousness and physical body on the iCloud before death.",
        "1": "Heaven\u2019s council decided to resurrect {p1}.",
        "2": "The sponsors thought {p1} hadn\u2019t survived long enough. In due time {p1_2} revived.",
        "3": "{p1}\u2019s remains were brought to the local scientist who managed to revive {p1_2}.",
        "4": "A combat medic was able to save {p1}. Since when does the arena have medics?!?"
      },
      "life": {
        "0": "{p1} stormed the library looking for tributes.",
        "1": "{p1} went home for the night.",
        "2": "{p1} entered the local supermarket looking for food.",
        "3": "{p1} got a cold.",
        "4": "{p1} raided the pharmacy for supplies.",
        "5": "Since the police station was so familiar to {p1}, {p1_1} went back there for safety.",
        "6": "{p1} picked berries from the local park.",
        "7": "{p1} planted vegetables in {p1_3} back garden.",
        "8": "{p1} pulled fruits from a tree in the neighbourhood."
      },
      "get_knife": {
        "0": "{p1} found a __{item}__ on the ground.",
        "1": "{p1} took a __{item}__ from a dead tribute.",
        "2": "{p1} took a __{item}__ from {p1_3} kitchen.",
        "3": "{p1} forged a __{item}__ from some scrap metal.",
        "4": "{p1} ordered a __{item}__ from the back of a magazine. Please wait 3-5 days for shipping."
      },
      "get_pistol": {
        "0": "{p1} took a __{item}__ from a dead cop.",
        "1": "{p1} went to the local gun store and bought a __{item}__.",
        "2": "{p1} stole a __{item}__ from a rotting corpse.",
        "3": "{p1} stole a __{item}__ from the local armory.",
        "4": "After weeks of studying, {p1} made a functional yet ugly __{item}__!"
      },
      "get_sniper": {
        "0": "{p1} raided a police station and stole a __{item}__.",
        "1": "{p1} was given a __{item}__ by a sponsor.",
        "2": "{p1} looted a supply drop dropped by a sponsor. In it was a __{item}__ and some food.",
        "3": "{p1} was able to build a bolt-action __{item}__ from some scraps and a piece of pipe.",
        "4": "{p1} shot expert in the academy and was given a __{item}__ as a reward!"
      },
      "get_taser": {
        "0": "{p1} found a __{item}__ in a hidden vault.",
        "1": "{p1} was given a __{item}__ by a sponsor.",
        "2": "{p1} found a __{item}__ in an empty cop car.",
        "3": "{p1} build a __{item}__ with some wire, batteries, an airsoft gun.",
        "4": "{p1} got a __{item}__ from the local grocery store. Weird."
      },
      "get_rocket": {
        "0": "{p1} found a __{item}__ in a gun store.",
        "1": "{p1} was given a __{item}__ by a sponsor.",
        "2": "{p1} made a crude __{item}__ from a pipe and some fireworks.",
        "3": "{p1} converted a simple potato gun into a __{item}__!",
        "4": "{p1} made a new type of __{item}__ using compressed air."
      },
      "get_bat": {
        "0": "{p1} came across a baseball field and found a __{item}__.",
        "1": "{p1} found a __{item}__ somewhere in a bush.",
        "2": "{p1} stole a __{item}__ from the local little league team. What a jerk.",
        "3": "{p1} used {p1_3} woodworking skills to make a __{item}__",
        "4": "{p1} made a __{item}__ from the heart of a rare tree!"
      }
    },
    "futuristic": {
      "kill": {
        "0": "{p1} disabled {p2}\u2019s body armor as {p2_1} slept, and {p2_1} {p2_w} slain by a radioactive weasel. How tragic!",
        "1": "{p1} hit {p2} while whipping around a corner on their hoverboard, flattening {p2_2} instantly.",
        "3": "{p1} locked {p2} out of the safety zone at the space port, and {p2_1} {p2_w} vaporized when the next ship took off.",
        "2": "{p1} waited until {p2} was looking over the edge of a balcony and shoved them. Too bad {p2_1} {p2_w}n\u2019t wearing a grav jacket!",
        "4": "{p1} booted {p2} off {p2_3} skimmer over a food processing plant.",
        "5": "{p1} pressed the eject button on {p2}\u2019s jetpack causing {p2_2} to plummet to {p2_3} death.",
        "6": "{p1} turned on the forcefield trying to block {p2} from reaching {p1_2}. Luckily only {p2_3} top half made it through.",
        "7": "Turns out {p1} rigged {p2}\u2019s hoverbike with explosives! Guess it really was {p2_3} last ride.",
        "8": "{p1} activated their cloaking device to sneak up on {p2} taking {p2_2} out swiftly."
      },
      "death": {
        "0":"{p1} became part of an experiment to create superhumans, however during the experiment something went wrong and {p1_1} burst into flames!",
        "1":"{p1} was kidnapped by extraterrestrial beings nobody\u2019s quite sure what happened to {p1_2} after.",
        "2":"{p1} forgot to buckle {p1_3} seatbelt before jumping into hyper speed.",
        "3":"{p1} was attacked by an alien impersonating another tribute.",
        "4":"{p1} landed on a planet full of tribal species, for some reason they decided to sacrifice {p1_2} to a nearby volcano.",
        "5":"{p1} was caught off guard by an alien plant that shared resemblance to earth\u2019s venus fly trap, but bigger, much bigger.",
        "6":"{p1}\u2019s body was infested with an unearthly microorganism, it killed {p1_2} from the inside out.",
        "7": "{p1} died of aging.",
        "8": "{p1} was disintegrated by a death ray."
      },
      "emp": {
        "0": "{p1} stuffed {p1_3} {item} into {p2}\u2019s mouth and detonated it. Gruesome.",
        "1": "{p1} used {p1_3} {item} to disable {p2}\u2019s weapon making {p2_2} an easy target.",
        "2": "BANG TZTZTS. {p1} used {p1_3} {item} to destroy {p2}\u2019s equipment, making {p2_2} very easy to kill. RIP.",
        "3": "{p1}\u2019s {item} got {p2} so disoriented that {p2_1} didn\u2019t see {p2_3} death coming..",
        "4": "{p1} overclocked {p1_3} {item}. When it hit {p2} it stopped {p2_3} heart!"
      },
      "blaster": {
        "0": "{p1} missed 4 times but was able to shoot {p2} with {p1_3} {item} before {p2_1} could escape.",
        "1": "{p1} took {p1_3} {item} and shot the wheels on {p2}\u2019s hoverbike causing {p2_2} to crash",
        "2": "BANG BANG. {p1}\u2019s {item} made {p2}\u2019s head fly right off.",
        "3": "{p1} fired a {item} at {p2}\u2019s abdomen, rupturing {p2_3} internal organs.",
        "4": "{p1} fired a {item} at point-blank range. It destroyed {p2}\u2019s skull completely.",
        "5": "{p1}\u2019s {item} bullet went right through the wall into {p2}.",
        "6": "YIKES. {p1} showed no mercy and blasted {p2} into outer-space with {p1_3} {item}."
      },
      "robot": {
        "0": "{p1} got {p1_3} {item} to stomp on {p2}, flattening {p2_2}.",
        "1": "{p1}\u2019s {item} grabbed {p2} and threw {p2_2} into the side of the nearest building.",
        "2": "{p1} got {p1_3} {item} to turn {p2}\u2019s innards into outards.",
        "3": "BEEP BOOP. {p1}\u2019s {item} killed {p2} without showing mercy.",
        "4": "After going on a rampage, {p1} deactivated {p1_3} {item}, which then fell on {p2}. Oof."
      },
      "drone": {
        "0": "{p1} programmed {p1_3} {item} so that it wouldn\u2019t show any mercy when killing {p2}.",
        "1": "{p1} used {p1_3} {item} swarm to kill {p2}.",
        "2": "{p1} sent {p1_3} {item} to {p2}, {p2_1} didn\u2019t even stand a chance.",
        "3": "{p1} tied {p2} to {p1_3} {item} and sent it towards a black hole. RIP.",
        "4": "{p1} sent {p1_3} {item} on a kamikaze mission into {p2}!"
      },
      "lasergun": {
        "0": "{p1} missed 4 times but was able to shoot {p2} with {p1_3} {item} before {p2_1} could escape.",
        "1": "{p1} took {p1_3} {item} and shot the wheels on {p2}\u2019s hoverbike causing {p2_2} to crash",
        "2": "BANG BANG. {p1}\u2019s {item} made {p2}\u2019s head fly right off.",
        "3": "{p1} fired a {item} at {p2}\u2019s abdomen, rupturing {p2_3} internal organs.",
        "4": "{p1} fired a {item} at point-blank range. It destroyed {p2}\u2019s skull completely.",
        "5": "{p1}\u2019s {item} bullet went right through the wall into {p2}.",
        "6": "YIKES. {p1} showed no mercy and blasted {p2} into outer-space with {p1_3} {item}."
      },
      "sword": {
        "0": "The the sheer amount of juice from {p1}\u2019s {item} was the end for {p2}. Bye bye.",
        "1": "{p1}\u2019s sword-skills had some great use when {p2} got absolutely destroyed by the {item}",
        "2": "{p1}\u2019s sword training really paid off. {p2} died to the {item}",
        "3": "{p1}\u2019s {item} went right through {p2}\u2019s body. Oof.",
        "4": "{p1}\u2019s {item} left a hole in {p2}\u2019s body. Wow.",
        "5": "{p1} proved once again how much power the {item} holds. Sadly {p2} found that out too late!",
        "6": "{p1}\u2019s {item} cut RIGHT THROUGH {p2}.",
        "7": "{p1}\u2019s confidence really showed when {p2} got cut into small pieces by the {item}."
      },
      "revive": {
        "0": "Turns out a scientist finally found an elixir to bring back the dead, everyone was sceptical until {p1} arose from the testing chamber.",
        "1": "{p1} had {p1_3} missing body parts replaced with cybernetic pieces.",
        "2": "The tissue of {p1} was reassembled by nanobots.",
        "3": "A Time Traveler caused a paradox which resulted in {p1}\u2019s death being reversed, bringing {p1_2} back as if nothing had ever happened.",
        "4": "{p1}\u2019s brain was preserved and placed into another host body.",
        "5": "BEHOLD {p1} 2!"
      },
      "life": {
        "0":"{p1} was star-gazing out the spacecraft window when {p1_1} saw another ship fly by in the distance",
        "1":"{p1} jumped to hyper speed to find a new planet to explore",
        "2":"{p1} discovered an ancient animal, the cow, previously thought to be extinct.",
        "3":"{p1} tinkered around with some metal hoping to invent something useful.",
        "4":"{p1} opened up {p1_3} Virtupad and searched for information regarding previous life forms.",
        "5":"{p1} was amused when scientists found an old video game about a crew completing tasks on a ship.",
        "6":"{p1} passed the time playing the new PS88.",
        "7":"{p1} almost got their homemade plasma weapon working but it fizzled out before it could be used."
      },
      "get_emp": {
        "0": "{p1} was given an __{item}__ by the Alien Sponsors.",
        "1": "{p1} raided a nearby space fighters base and found an __{item}__",
        "2": "{p1} made an __{item}__ in a cave! With a box of scraps!",
        "3": "{p1} found a stash of __{item}__\u2019s on a lunar base.",
        "4": "{p1} was rewarded with an __{item}__ by doing geocaches!"
      },
      "get_blaster": {
        "0": "{p1} was given a __{item}__ as a gift for helping the locals of a nearby planet.",
        "1": "{p1} picked up a __{item}__ from one of the fallen SpaceX soldiers.",
        "2": "{p1} fought off some thugs who were attempting to mug {p1_2}, one of which dropped the {item} they were holding.",
        "3": "{p1} was given a __{item}__ by the Alien Sponsors.",
        "4": "{p1} created a __{item}__ with a toaster, plasma battery, and a bowl of grapes. Wait, that can't be right.."
      },
      "get_robot": {
        "0": "After welding the last pieces into place {p1}\u2019s __{item}__ was finally built and ready for war.",
        "1": "{p1} found an abandoned fighter __{item}__ in an alley, after replacing a few circuit boards {p1_1} {p1_w} able to get it running again.",
        "2": "{p1} won a rookie bot fighting competition! The prize?; {p1_1} got to keep the __{item}__ {p1_1} used!",
        "3": "{p1} was given a __{item}__ by the Alien Sponsors.",
        "4": "{p1} converted an old asteroid bot into a new __{item}__!"
      },
      "get_drone": {
        "0": "{p1} was given a __{item}__ by a very friendly alien",
        "1": "{p1} found a __{item}__ hidden underneath the core reactor.",
        "2": "{p1} found a broken __{item}__, luckily {p1_1} knew how to fix it.",
        "3": "{p1} converted an RC airplane into a __{item}__!",
        "4": "{p1} repaired a __{item}__ from the old lunar base."
      },
      "get_lasergun": {
        "0": "{p1} was given a cool __{item}__ by a very friendly alien",
        "1": "A __{item}__ dropped from the sky.. right in front of {p1}.",
        "2": "{p1} stole a __{item}__ from the galactic police.",
        "3": "With some amazing technical skill, {p1} turned a normal laser pointer into a __{item}__!",
        "4": "{p1} found a __{item}__ in a guard shack and decided to \"borrow it.\""
      },
      "get_sword": {
        "0": "{p1} got a special present from galactic gods; the __{item}__ now belongs to {p1_2}.",
        "1": "WHOOP WHOOP. {p1} found a __{item}__ in a spaceship.",
        "2": "Woosh. The super epic __{item}__ is now in possession of {p1}.",
        "3": "{p1} found a __{item}__ on a covenant warship.",
        "4": "{p1} was given a __{item}__ by a stranger called something like Juke Flywalker."
      }
    },
    "medieval": {
      "kill": {
        "0": "{p1} killed {p2}! What a bloodbath!",
        "1": "{p1} broke {p2}\u2019s spine by throwing \u2019em off a cliff.",
        "2": "Hark! {p1} killed {p2} with a rock!",
        "3": "{p1} snapped {p2}\u2019s neck whilst sleeping. Good night",
        "4": "{p1} killed {p2}, \"I came, I saw, thou died\".",
        "5": "{p1} brutally executed {p2}.",
        "6": "{p1} killed {p2}, \"say good day to mine little friend!\"",
        "7": "{p1} killed {p2} in a forsooth shocking way.",
        "8": "{p1} neutralized {p2} whilst sleeping. Rest in peace.",
        "9": "{p1} got into a fist fight with {p2} and killed \u2019em.",
        "10": "Did {p1} just dispatch {p2} with a stick? How gruesome.",
        "11": "{p1} broke {p2}\u2019s kneecaps and left \u2019em for dead; {p2_1} {p2_w} later eaten by birds.",
        "12": "{p1} bludgeoned {p2} to death using someone else\u2019s severed leg.",
        "13": "{p1} slipped a python into {p2}\u2019s sleeping bag. In the morrow, {p1_1} feigned surprise as {p2_1} {p2_w} found half-consumed.",
        "14": "{p1} butchered {p2} after {p2_1} didn\u2019t deign to change religion.",
        "15": "{p1} accused {p2} of witchcraft. To the pyre they went.",
        "16": "{p1} caught {p2} trying to steal food. {p1_1} didn\u2019t take that lightly."
      },
      "death": {
        "0": "{p1} should not have eaten those berries.",
        "1": "{p1} swam in a river infested with leeches. We can all guess how that ended.",
        "2": "{p1} tried to swim in lava.",
        "3": "It\u2019s verily too ill that {p1} thought those piranhas were friendly yet strange fish. rip.",
        "4": "{p1} misjudged the depth of the water and tried to dive in head-first. {p1_1} cracked {p1_3} head at the bottom.",
        "5": "{p1} wanted out so {p1_1} drank poisonous water.",
        "6": "{p1} was executed for being a heretic.",
        "7": "{p1} set up {p1_3} camp on a tall tree, yet ended up falling down and shattering every bone in {p1_3} body.",
        "8": "{p1} was struck by thunder-stone. {p1_1} died of not long after the incident.",
        "9": "{p1} was trapped in the well. {p1_1} survived for 3 days without food yet {p1_1} hath reached {p1_3} reasonable shore.",
        "10": "{p1} went for a run around the woodland but died of exhaustion. The need of water in the town didn\u2019t help with that."
      },
      "crossbow": {
        "0": "{p1} killed {p2} with {p1_3} {item} trying to shoot an apple off {p2_3} head, yet {p1_1} hath missed.",
        "1": "Did {p1} just dispatch {p2} with {p1_3} {item} from 2 furlongs away?",
        "2": "{p1} used {p1_3} {item} to shoot a bolt straight through the skull of {p2}.",
        "3": "{p1} missed {p1_2} first two {item} shots, but the third bolt killed {p2}.",
        "4": "{p1}\u2019s archery lessons proved to be very helpful when {p1_1} came across {p2}; killing {p2_2} with {p1_3} {item}.",
        "5": "{p1} shot {p2} with {p1_3} {item}, \"hey lad didn\u2019t see you there, I was aiming for the person behind thou.\"",
        "6": "{p1} pierced through {p2}\u2019s armor with {p1_3} {item}."
      },
      "mace": {
        "0": "{p1} slaughtered {p2} with {p1_3} {item}.",
        "1": "{p1} sneaked up on {p2} with {p1_3} {item}, whilst {p2_1} {p2_w} setting up {p2_3} campfire. rip.",
        "2": "{p1}\u2019s {item} choked {p2} to death.",
        "3": "{p1} drew {p1_3} {item} at {p2}, {p2_1} ne\u2019r saw the day.",
        "4": "{p1} tore {p2}\u2019s skull open with {p1_3} {item}. Successful assassination.",
        "5": "{p1} yerked {p2} in the heart with {p1_3} {item}. \"god wanted thou dead\".",
        "6": "{p1} threw {p1_3} {item} at {p2}, {p2_1} ne\u2019r saw the day.",
        "7": "{p1}\u2019s {item} swing had so much force behind it that it turned {p2} into bawbling pieces.",
        "8": "{p1} turned into a tornado with {p1_3} {item} that befell to cross {p2}\u2019s path.",
        "9": "{p1} went to sleep. when {p2} tried to kill \u2019em {p2_1} accidentally fell into the spikes of the {item} that was laying on the ground.",
        "10": "the pure force of {p1}\u2019s {item} made {p2}\u2019s body split in two"
      },
      "horse": {
        "0": "{p1}\u2019s {item} trampled {p2}. Yikes.",
        "1": "{p1}\u2019s {item} fatally injured {p2} by kicking \u2019em.",
        "2": "{p1} and {p1_3} {item} chased after {p2} to neutralize \u2019em.",
        "3": "{p1} and {p1_3} {item} brutally slaughtered {p2} by stomping on \u2019em multiple times.",
        "4": "After a long chase {p1} and {p1_3} {item} finally caught up to {p2} to slay \u2019em.",
        "5": "{p1}\u2019s {item} chased {p2} into lava.",
        "6": "{p1} and {p1_3} {item} chased {p2} into coign. {p2_1} were ne\u2019r seen after that."
      },
      "halberd": {
        "0": "{p1}\u2019s {item} got stuck in {p2}\u2019s heart. That might hast hurt.",
        "1": "{p1}\u2019s {item} sliced {p2} in dozens pieces.",
        "2": "the reach on {p1}\u2019s {item} helped {p1_2} win the fight against {p2}.",
        "3": "{p1}\u2019s {item} was so sharp that a bawbling swing was fatal for {p2}.",
        "4": "{p1} floored {p2} with the handle of {p1_3} {item}, then {p1_1} finished the job ",
        "5": "{p1}\u2019s {item} became very dull, however that didn\u2019t forbear {p1_2} from killing {p2}"
      },
      "shield": {
        "0": "{p1} used {p1_3} {item} to block {p2}\u2019s attack, and clap right back. rip {p2_2}.",
        "1": "{p1} stomped {p2} on {p2_3} head with {p1_3} {item}.",
        "2": "{p1} crushed {p2}\u2019s chest with {p1_3} {item}.",
        "3": "{p1} knocked {p2} unconscious with {p1_3} {item}, making {p2_2} an primrose target to kill.",
        "4": "{p1} used {p1_3} shiny {item} to distract and kill {p2}.",
        "5": "{p1} threw {p1_3} {item} at {p2}\u2019s head, purpose killing {p2_2}.",
        "6": "{p1}\u2019s {item} blocked {p2}\u2019s attack, catching {p2_2} off-guard. that was a mistake.",
        "7": "{p1}\u2019s {item} made {p2}\u2019s weapon break when {p2_1} swung it. {p2_1} stood no chance after that."
      },
      "lance": {
        "0": "{p1} put a {item} through {p2}\u2019s heart.",
        "1": "one simple {item} thrust to the abdomen was all it took for {p1} to dispatch {p2}.",
        "2": "with incredible purpose, {p1} threw a {item} straight through {p2}\u2019s body.",
        "3": "{p1} staked {p2} with {p1_3} {item}.",
        "4": "{p1} challenged {p2} to a broil. end issue: {p1_3} {item} went right through \u2019em.",
        "5": "{p1}\u2019s {item} went through {p2} like \u2019twere butter."
      },
      "revive": {
        "0": "{p1} got revived by god.",
        "1": "{p1} is back in the broil.",
        "2": "{p1} was resurrected after suffering an unjustified death.",
        "3": "the population of heaven hath just decreased, because {p1} is back in the game!",
        "4": "{p1} befell to be marry a sorcerer. They brought themselves to life!",
        "5": "{p1} prayed to the gods, which got \u2019em a spot back in the game."
      },
      "life": {
        "0": "{p1} found a river.",
        "1": "{p1} went fishing for food.",
        "2": "{p1} found a lake and decided to set up camp.",
        "3": "{p1} caught themselves a nice meal!",
        "4": "{p1} set traps for food, yet didn\u2019t fare to catch aught.",
        "5": "{p1} successfully hunted a hinds!",
        "6": "{p1} known some one walking near \u2019em.",
        "7": "{p1} found some edible plants.",
        "8": "when {p1} woke up in the morrow, {p1_1} {p1_w} surprised to find a package of food beside \u2019em.",
        "9": "{p1} prayed to god!",
        "10": "{p1} prayed to the devil."
      },
      "get_crossbow": {
        "0": "{p1} made a __{item}__ from some sticks, rocks and vines.",
        "1": "{p1} found a __{item}__ in the castle.",
        "2": "{p1} found a __{item}__ hanging towards the wall.",
        "3": "{p1} impressed the king, who granted {p1_2} a __{item}__!",
        "4": "After joining the royal guard, {p1} was given a __{item}__."
      },
      "get_mace": {
        "0": "{p1} found a __{item}__.",
        "1": "{p1} got a __{item}__ from a knight.",
        "2": "{p1} found themself a new __{item}__ while looking for a heretic. that\u2019ll be handy!",
        "3": "{p1} took a __{item}__ laying next to a dead corpse",
        "4": "{p1} found a huge __{item}__ on the ground."
      },
      "get_horse": {
        "0": "{p1} reclaimed a __{item}__ with some apples.",
        "1": "{p1} fed a starving __{item}__ and they became fast friends.",
        "2": "{p1} came across a __{item}__ in the stable, and decide to steal it.",
        "3": "{p1} was shown how to tame a __{item}__ by some nomads!",
        "4": "{p1} stole a __{item}__ from {p1_3} lord."
      },
      "get_halberd": {
        "0": "{p1} found a __{item}__ in the weapon room.", 
        "1": "{p1} got a __{item}__ from a friendly knight.",
        "2": "{p1} found an old __{item}__ hidden in the sand.",
        "3": "{p1} made a __{item}__ by taking an axe and making it... longer.",
        "4": "{p1} was sent a __{item}__ by a sponsor!"
      },
      "get_shield": {
        "0": "{p1} found a __{item}__ in the trophy room.", 
        "1": "{p1} got a __{item}__ from a friendly duke.",
        "2": "{p1} saw a very shiny __{item}__ sitting in a corner. \u2019tis now theirs.",
        "3": "{p1} made a __{item}__ from some wood from {p1_3} old home.",
        "4": "{p1} was given a new __{item}__ with {p1_3} lord\u2019s crest on it!"
      },
      "get_lance": {
        "0": "{p1} was graced a __{item}__ from Prince Royel V of the Rumbleland.",
        "1": "{p1} stole a __{item}__ from the castle.",
        "2": "{p1} went to the blacksmith and bought a __{item}__.",
        "3": "{p1} was given a __{item}__ for winning the first annual Rumbleland jousting tournament!",
        "4": "{p1} made a __{item}__ from the royal white oak tree!"
      }
    },
    "pirate": {
      "kill": {
        "0": "{p1} caught {p2} tryin\u2019 to plunder grub. {p1_1} didn\u2019 take that lightly.",
        "1": "{p1} didn\u2019 want to share the treasure with {p2}.",
        "2": "{p1} hit {p2} off the ship, defending against the Royal Navy.",
        "3": "{p1} executed {p2} as punishment for {p2_3} betrayal.",
        "4": "{p1} hid {p2}\u2019s corpse in a barrel after {p1_1} killed em\u2019.",
        "5": "{p1} choked {p2} while {p2_1} {p2_w} sleepin\u2019. How perfidious!"
      },
      "death": {
        "0": "{p1} set up {p1_3} camp on the look out, but ended up fallin\u2019 down an\u2019 breakin\u2019 {p1_3} neck.",
        "1": "{p1} was made to walk the plank after {p1_1} \u2019ad tried instigatin\u2019 a mutiny.",
        "2": "{p1} drank too much an\u2019 fell off the ship.",
        "3": "Arrrr, that\u2019s not how you use a bomb, {p1}!",
        "4": "{p1} died of scurvy.",
        "5": "{p1} was executed for piracy.",
        "6": "{p1} tried hidin\u2019 in a barrel full of water but wasn\u2019t able to open it again."
      },
      "life": {
        "0": "{p1} strolled over to the weekly market.",
        "1": "{p1} had to swab the deck.",
        "2": "{p1} had to buy in the provisions, since {p1_1} had to stay undercover.",
        "3": "{p1} took a nap on the look out.",
        "4": "{p1} cleaned the captain\u2019s equipment.",
        "5": "{p1} searched the horizon for land.",
        "6": "{p1} went fishing.",
        "7": "{p1} inspected the crew.",
        "8": "{p1} spent {p1_3} time fishing.",
        "9": "{p1} found a jar of dirt!"
      },
      "revive": {
        "0": "A pirate lord liked {p1}, so he made {p1_2} one of the crew.",
        "1": "{p1} told the governor {p1_3} companions location so he spared {p1_2}. What a dirty rat.",
        "2": "{p1} was able to escape the royal prison before gettin\u2019 executed.",
        "3": "{p1} made it to the wild people, who were able to save {p1_3} life.",
        "4": "{p1} was taken pity on by the pirates."
      },
      "blunderbuss": {
        "0": "{p1} shot {p2} with {p1_3} {item} through a gun port. What an amazin\u2019 shot.",
        "1": "{p1} heard {p2} cryin\u2019 during {p2_3} sleep and decided to put {p2_2} out of {p2_3} misery with {p1_3} {item}. Well that was really uncalled-for!",
        "2": "{p1} mistook {p2} for an enemy and quickly made use of {p1_3} {item}.",
        "3": "{p1} used {p1_3} {item} to snipe {p2} off the wall, but {p1_1} didn\u2019 manage to stop {p2_3} attempt of destroying the port.",
        "4": "{p1} accidentally hit {p2} with {p1_3} {item} pretty hard. {p2} is just unconscious, right?"
      },
      "sickle": {
        "0": "{p1} was spinning really fast with {p1_3} {item} and chopped {p2}\u2019s head off.",
        "1": "{p1} assassinated {p2} with {p1_3} {item}.",
        "2": "{p1} stabbed {p2} multiple times using a {item}.",
        "3": "{p1} used {p1_3} {item} to grab onto {p2} and throw {p2_2} down. And kill {p2_2} of course.",
        "4": "{p1} choked {p2} to death using {p1_3} {item}."
      },
      "bomb": {
        "0": "{p1} rolled {p1_3} {item} under {p2}\u2019s chair. This really was {p2_3} last meal.",
        "1": "{p1} threw {p1_3} {item} right at {p2}\u2019s face.",
        "2": "{p1} was able to smuggle a {item} into the royal palace, but only managed to kill {p2} there.",
        "3": "{p1} killed {p2} because {p2_1} didn\u2019 know {p2_1} {p2_w} playing with an actual hot potato {item}",
        "4": "{p1} stuffed {p1_3} {item} into {p2}\u2019s mouth and lit it."
      },
      "parrot": {
        "0": "{p1}\u2019s {item} distracted {p2}, making {p2_2} an easy target. RIP",
        "1": "{p1}\u2019s {item} played dead, taking {p2} by surprise when {p2_1} came too close.",
        "2": "{p1}\u2019s {item} led {p2} right into a trap!",
        "3": "{p1} taught {p1_3} {item} how to fire a cannon. {p2} didn\u2019 believe it until it was too late.",
        "4": "{p1}\u2019s {item} jumped off the crow\u2019s nest, right into {p2}\u2019s face."
      },
      "cutlass": {
        "0": "{p1} forced {p2} to walk the plank with {p1_3} {item}",
        "1": "With a swich of {p1_3} {item}, {p1} disarmed {p2}. Literally!",
        "2": "{p2} didn't stand a chance when {p1} pulled out {p1_3} {item} and charged.",
        "3": "{p1} boarded {p2}\u2019s ship and killed 'em, claiming the ship as {p1_3} own!",
        "4": "{p1} used {p1_3} {item} to cut a boarding rope, throwing {p2} into the briny deep!"
      },
      "cannon": {
        "0": "{p1} asked {p2} to look into {p1_3} {item}\u2019s barrel. {p2_1} {p2_w} greeted by a cannonball to the face!",
        "1": "{p1} overfilled {p1_3} {item} and left. When {p2} lit the fuse it blew them to smithereens!",
        "2": "{p1} ran out of cannonballs, so fired cutlery out of {p1_3} {item}. Get forked {p2}!",
        "3": "{p1}\u2019s {item} tore through the mast of {p2}\u2019s ship, which fell and crushed them.",
        "4": "{p1} sunk {p2}\u2019s ship with a well-aimed shot from {p1_3} {item}!"
      },
      "get_blunderbuss": {
        "0": "{p1} snuck into the captain\u2019s cabin an\u2019 stole their __{item}__.",
        "1": "{p1} bought a __{item}__ on the weekly pirate market.",
        "2": "{p1} managed to build {p1_3} own __{item}__.",
        "3": "{p1} stole a soldier\u2019s rifle and removed the gun barrel, turning it into a fancy __{item}__.",
        "4": "{p1} got a __{item}__ from some sponsors. This is still an arena battle mates!"
      },
      "get_sickle": {
        "0": "{p1} took a __{item}__ from a dead mate.",
        "1": "The knife {p1} ordered from the weaponsmith spent too much time in the fire, {p1_1} ended up gettin a __{item}__ instead.",
        "2": "After {p1} had to defend themselves with a __{item}__, {p1_1} decided to always keep it with {p1_2}.",
        "3": "{p1} _borrowed_ a __{item}__ from a nearby shack.",
        "4": "{p1} replaced {p1_3} hook with a sickle for more range.",
        "5": "{p1} bought a __{item}__ from the farmers market."
      },
      "get_bomb": {
        "0": "{p1} made {p1_3} own __{item}__ using some leaves and gun powder.",
        "1": "{p1} stole a __{item}__.",
        "2": "{p1} bought some cannonballs, between which a __{item}__ was hidden.",
        "3": "{p1} filled a lantern with gun powder. I guess this works as __{item}__ too.",
        "4": "{p1} found a hidden package with a __{item}__ in it."
      },
      "get_parrot": {
        "0": "{p1} bought a __{item}__ on the black market.",
        "1": "{p1} managed to catch a __{item}__ with a trap. {p1_1} then tamed it with some seeds.",
        "2": "{p1} got an emotional support __{item}__ from the doc.",
        "3": "{p1} almost died to a __{item}__. Soon {p1_1} formed a close bond.",
        "4": "After the captain died, their __{item}__ flew over to {p1}."
      },
      "get_cutlass": {
        "0": "{p1} stole a __{item}__. {p1_1} are a pirate after all.",
        "1": "{p1} grabbed a __{item}__ from the armory below deck.",
        "2": "{p1} took a __{item}__ from the corpse of another pirate.",
        "3": "The captain gave {p1} a brand new cutlass!",
        "4": "{p1} bought a __{item}__ from the black market."
      },
      "get_cannon": {
        "0": "After a successful boarding, {p1} got a __{item}__ for {p1_3} ship!",
        "1": "{p1} took a __{item}__ from a wrecked ship.",
        "2": "{p1} managed to find a __{item}__ in middle of the sea. How does that make sense?",
        "3": "{p1} bought a __{item}__ from a sailor.",
        "4": "A sponsor dropped a __{item}__ into the arena. Thankfully it didn't hit {p1}!"
      }
    },
    "samurai": {
      "kill": {
        "0": "{p1} honored {p2} with a warrior\u2019s death.",
        "1": "{p1} killed {p2} in a freak hunting accident!",
        "2": "{p1} and {p2} agreed to a friendly duel. They probably shouldn\u2019t have used real weapons.",
        "3": "{p1} became a shinobi, {p1_3} first assignment was {p2}.",
        "4": "After a long battle, {p1} finally gained the advantage over {p2}"
      },
      "death": {
        "0": "{p1} felt dishonored and committed seppuku.",
        "1": "{p1}, Omae wa mou shinderu.",
        "2": "{p1} didn\u2019t see the cliff ahead of them. RIP.",
        "3": "{p1} tresspassed on a rival lord's land. {p1_1} {p1_w} never seen again.",
        "4": "{p1} insulted the Emperor. That didn\u2019t end well."
      },
      "katana": {
        "0": "{p1} dismembered {p2} with {p1_3} {item}.",
        "1": "{p1} brought down {p2} with {p1_3} {item} as {p2} said {p2_3} last prayers.",
        "2": "{p1} was satisfied when {p1_1} sliced {p2} in half with {p1_3} {item}.",
        "3": "{p1} forgot to sharpen {p1_3} {item}, which made killing {p2} even more brutal.",
        "4": "{p1} used {p1_3} {item} to cut {p2} into sashimi!"
      },
      "shuriken": {
        "0": "{p1} filled {p2} with {p1_3} {item}s.",
        "1": "{p1}\u2019s {item} was fast enough to rupture {p2}\u2019s internal organs.",
        "2": "{p1} was finally able to kill {p2} after wasting 68 of {p1_3} {item}s, or was it 69?",
        "3": "{p1} threw {p1_3} first {item} while training, accidentally hitting {p2}. RIP",
        "4": "{p1} cut {p2} into ribbons with a handful of {p1_3} {item}\u2019s!"
      },
      "yumi": {
        "0": "{p1} shot {p2} through the heart with {p1_3} {item}.",
        "1": "Perfect! No one would have expected {p1} to kill {p2} on the first try with {p1_3} {item}.",
        "2": "After years of training with {p1_3} {item}, {p1} was able to hit {p2} right in the heart.",
        "3": "{p1} used a {item} to hit {p1_3} target with such force it went through and hit {p2}!",
        "4": "With the strength of an ox, {p1} used {p1_3} {item} to rip a hole right through {p2}."
      },
      "blowpipe": {
        "0": "Before anyone knew it, {p1} shot {p2} with their {item}.",
        "1": "A dart from {p1}\u2019s {item} was enough to kill {p2} instantly.",
        "2": "With a single breath, {p1} ended the life of {p2} with {p1_3} {item}",
        "3": "{p1} used a poison dart in {p1_3} {item} to send {p2} to an early grave.",
        "4": "{p1} was out of breath by the time {p1_1} killed {p2} with {p1_3} {item}."
      },
      "tessen": {
        "0": "{p1} put on a ceremonial dance for {p2}. Just as it ended {p1_1} slashed {p2_3} throat with {p1_3} {item}!",
        "1": "{p1} threw {p1_3} {item} with deadly accuracy, imbedding it firmly in {p2}\u2019s neck!",
        "2": "With one quick flourish of {p1_3} {item}, {p1} separated {p2}\u2019s head from {p2_3} neck.",
        "3": "Disguised as a geisha, {p1} got close enough to scratch {p2} with {p1_3} poisoned {item}.",
        "4": "{p1}\u2019s {item} wouldn\u2019t open, so {p1_1} beat {p2} with it instead!"
      },
      "nunchaku": {
        "0": "In a comical accident, {p1} flung {p1_3} {item} at {p2}, crushing {p2_3} windpipe!",
        "1": "Like a raging typhoon, {p1} lashed out with {p1_3} {item}, cracking {p2}\u2019s skull open!",
        "2": "{p1} mastered the {item}, hitting {p2} right between the eyes,",
        "3": "{p1} used two {item} at the same time, hitting {p2} on both sides of the head!",
        "4": "{p1} tried to show {p2} a trick with {p1_3} {item}, but killed {p2_2} instead!"
      },
      "revive": {
        "0": "{p1} recieved the Emperor\u2019s blessing.",
        "1": "{p1} received a second chance to prove they are innocent.",
        "2": "The gods let {p1} back into the game.",
        "3": "{p1} simply said 'no' to death.",
        "4": "{p1} escaped the underworld through sheer force of will."
      },
      "life": {
        "0": "{p1} tended to {p1_3} rock garden.",
        "1": "{p1} went on a picnic with {p1_3} friends.",
        "2": "{p1} stood in the fresh morning breeze.",
        "3": "{p1} learned a forbidden jutsu.",
        "4": "The Emperor granted an audience to {p1}",
        "5": "{p1} dreamed of becoming Hokage."
      },
      "get_katana": {
        "0": "{p1} was granted a __{item}__ by their daimyo.",
        "1": "{p1} lifted a __{item}__ from a large boulder.",
        "2": "{p1} visited a master swordsmen and earned {p1_3} first __{item}__.",
        "3": "After proving {p1_3} worth with a training sword, {p1} earned a real __{item}__.",
        "4": "{p1} won a duel and took {p1_3} opponent\u2019s {item}."
      },
      "get_shuriken": {
        "0": "{p1} forged several __{item}__.",
        "1": "{p1} found some __{item}__ in a hidden cache.",
        "2": "After swearing allegiance to the Emperor, {p1} was granted an unlimited supply of __{item}s__.",
        "3": "{p1} was given a supply of __{item}__ from {p1_3} diamyo.",
        "4": "{p1} got some __{item}__ from the local smith."
      },
      "get_yumi": {
        "0": "{p1} carefully crafted a perfect __{item}__.",
        "1": "{p1} picked up a __{item}__ on {p1_3} way through the forest.",
        "2": "{p1} went to the academy and was granted a __{item}__.",
        "3": "{p1} spent hours meticulously crafting a __{item}__.",
        "4": "{p1} stole a __{item}__ from the local shinobi academy."
      },
      "get_blowpipe": {
        "0": "{p1} made a __{item}__ from some spare bamboo.",
        "1": "{p1} discovered a __{item}__ from a mysterious box.",
        "2": "{p1} visited {p1_3} elder, who crafted {p1_2} a new __{item}__.",
        "3": "{p1} found a hollow reed and made it into a __{item}__.",
        "4": "{p1} was given a __{item}__ by a mysterious ninja."
      },
      "get_tessen": {
        "0": "{p1} recieved a __{item}__ from {p1_3} mother!",
        "1": "A sponsor dropped a custom Rumble __{item}__ right next to {p1}.",
        "2": "{p1} carefully decorated a new __{item}__ for battle.",
        "3": "{p1} recieved a __{item}__ for putting together a traditional geisha show.",
        "4": "{p1} was given a __{item}__ by the local theater community."
      },
      "get_nunchaku": {
        "0": "{p1} hand crafted a pair of __{item}__ from imported mahogany!",
        "1": "{p1} recieved custom bamboo __{item}__!",
        "2": "{p1} picked up a new __{item}__ from a travelling merchant.",
        "3": "As a reward for {p1_3} loyalty, {p1} was given antique __{item}__.",
        "4": "{p1} tied two sticks together and called it __{item}__. We\u2019ll see how long that lasts."
      }
    },
    "steampunk": {
      "kill": {
        "0": "{p1} killed {p2} for {p2_3} pocketwatch. How rude.",
        "1": "{p1} dosed {p2}\u2019s tea with way too much opium.",
        "2": "{p1} locked {p2} in the cellar and forgot about {p2_2}",
        "3": "{p1} invented explosive bullets. {p1_3} test subject {p2} didn\u2019t approve.",
        "4": "{p1} blasted {p2} with steam from {p1_3} steampack.",
        "5": "{p1} and {p2} fought in an underground boxing match. It didn\u2019t fare well for {p2}."
      },
      "death": {
        "0": "{p1} discovered that people can't run on steam. Ouch.",
        "1": "{p1} caught the plague from eating a rat.",
        "2": "{p1} invented a new.. Wait, nevermind, {p1_1} blew up",
        "3": "{p1} joined a cult and was immediately sacrificed.",
        "4": "{p1} was electrocuted while testing a prototype.",
        "5": "{p1} fell out of a hot air balloon.",
        "6": "{p1} met a mugger in a London alley."
      },
      "life": {
        "0": "{p1} invented the automobile!",
        "1": "{p1} became a detective.",
        "2": "{p1} began testing a prototype jetpack.",
        "3": "{p1} caught a ride in a blimp. Look at that view!",
        "4": "{p1} picked up a new pair of goggles.",
        "5": "{p1} put together a clockwork man.",
        "6": "{p1} developed an addiction to collecting gears.",
        "7": "{p1} went for a stroll around London.",
        "8": "{p1} invented an automatic typewriter! For some reason it only types in French?",
        "9": "{p1} put a gear on a hat and called it fashion."
      },
      "revive": {
        "0": "Thanks to {p1_3} steampack, {p1} was shocked back to life!",
        "1": "{p1}\u2019s brain was put into a clockwork suit. Welcome back!",
        "2": "{p1} was granted an official pardon from death by the Queen herself.",
        "3": "{p1} was brought back to life by a mysterious sponsor.",
        "4": "{p1} caught so many diseases that it somehow restarted {p1_3} heart??"
      },
      "cane": {
        "0": "{p1}\u2019s {item} got stuck closed, so {p1_1} beat {p2} with it instead.",
        "1": "{p1} ran {p1_3} {item} right through {p2}, killing {p2_2} instantly.",
        "2": "{p1} stabbed {p2} repeatedly with {p1_3} {item}.",
        "3": "With the grace of a trained professional, {p1} slashed {p2}\u2019s throat with {p1_3} {item}.",
        "4": "{p1} forgot to sheathe {p1_3} {item} and {p2} tripped onto it. What are the odds?"
      },
      "harpoon": {
        "0": "{p1} launched a {item} into {p2}, pinning {p2_2} onto a tree. {p1_1} left {p2_2} to starve.",
        "1": "During target practice with {p1_3} {item}, {p1} hit a rock, causing it to ricochet into {p2}.",
        "2": "In a freak accident, {p1}\u2019s {item} went off, impaling {p2} from across the street.",
        "3": "{p1} only managed to graze {p2} with {p1_3} {item}. {p2_1} died of tetanus soon after.",
        "4": "{p1} upgraded {p1_3} {item} with plasma. The white-hot harpoon burned a hole straight through {p2}!"
      },
      "hammer": {
        "0": "{p1} turned {p2}\u2019s head into a pancake with one swing of {p1_3} {item}!",
        "1": "{p1} was polishing {p1_3} {item} on the balcony. It slipped out of {p1_3} hands and fell on {p2}, completely crushing them.",
        "2": "{p1} did a full 360 degreee spin with {p1_3} {item}, when it hit {p2} it ruptured all {p2_3} internal organs.",
        "3": "Working in the railyard gave {p1} all the strength {p1_1} needed to break all the bones in {p2}\u2019s body with {p1_3} {item}",
        "4": "{p1} lightly tapped {p2} with {p1_3} {item}."
      },
      "musket": {
        "0": "{p1} missed {p2} with {p1_3} first shot of the {item}. Instead of reloading, {p1_1} beat {p2_2} with it.",
        "1": "{p1} ran out of ammo, so just loaded random garbage into {p1_3} {item}. {p1_1} still managed to kill {p2}.",
        "2": "{p1} shot {p2} through {p2_3} left eye.",
        "3": "{p1} rigged {p1_3} {item} with a tesla coil. {p1_1} proceeded to electrocute {p2}.",
        "4": "{p1}\u2019s {item} jammed, so {p1_1} affixed a bayonet and impaled {p2}."
      },
      "get_cane": {
        "0": "{p1} found an old __{item}__ in {p1_3} parent\u2019s attic.",
        "1": "{p1} bought a __{item}__ from the local weapon\u2019s store.",
        "2": "{p1} made a __{item}__ from the bones of {p1_3} enemies.",
        "3": "{p1} fashioned a __{item}__ out of some pipe and scrap metal.",
        "4": "{p1} made a __{item}__ out of an old katana."
      },
      "get_harpoon": {
        "0": "{p1} decided to use {p1_3} old fishing __{item}__ as a weapon.",
        "1": "An anonymous sponsor sent {p1} a __{item}__!",
        "2": "{p1} recovered a __{item}__ from a coastal city. {p1_1} added electricity for an added punch!",
        "3": "{p1} found a __{item}__ in a tree. How did that get there...?",
        "4": "After a storm, {p1} found a __{item}__ washed up on the beach."
      },
      "get_hammer": {
        "0": "{p1} added some gears to {p1_3} railyard __{item}__ and called it the Crusher!",
        "1": "{p1} bought a new __{item}__ and added explosive charges to the end of it, brutal!",
        "2": "{p1} crafted a __{item}__ with lead pipe and a cinder block.",
        "3": "{p1} stole a __{item}__ from a nearby construction crew.",
        "4": "{p1} read up on Norse mythology and decided to make a __{item}__ like Thor!"
      },
      "get_musket": {
        "0": "{p1} bought a __{item}__ from the nearby gunsmith.",
        "1": "{p1} enlisted in the Queen\u2019s guard and was issued a __{item}__.",
        "2": "{p1} took a __{item}__ from a corpse on the battlefield.",
        "3": "{p1} made a __{item}__ in a cave. With a box of scraps!",
        "4": "{p1} made a crude __{item}__ with a block of wood and a steel pipe."
      }
    }
  },
  "obtainable": {
    "classic": {
      "kill": {
        "-1": "{p1} used {p1_3} fighting experience to neutralize {p2}",
        "0": "{p1} slit {p2}\u2019s throat with a sharp rock.",
        "1": "{p1} snapped {p2}\u2019s neck while {p2_1} {p2_w} sleeping. Good night!",
        "2": "{p1} killed {p2}, \"GG WP.\"",
        "3": "Did {p1} just kill {p2} with a stick? How gruesome.",
        "4": "{p1} broke {p2}\u2019s kneecaps and left {p2_2} for dead; {p2_1} {p2_w} promptly eaten by scavengers.",
        "5": "{p1} dosed {p2}\u2019s meal with a slow-acting poison. Bye bye.",
        "6": "{p1} bludgeoned {p2} to death using someone else\u2019s severed leg.",
        "7": "{p1} slipped a python into {p2}\u2019s sleeping bag. In the morning, {p1_1} pretended to be surprised as the victim was found half-consumed.",
        "8": "{p1} ate {p2}.",
        "9": "{p1} heard a voice, turned out it was {p2}. Yes, was. RIP.",
        "10": "{p1} was offered human meat when {p1_3} friend {p2} self sacrificed themselves. Goodbye :\u2019( !",
        "11": "{p1} killed {p2}. \"Sorry dude, it was either you or me.\"",
        "12": "{p1} hunted {p2} for {p2_3} brain!. What a psycho!.",
        "13": "{p1} found the dying {p2} by the river; {p1_1} put {p2_2} out of {p2_3} misery by giving {p2_2} a quick death.",
        "14": "{p1} flung {p2} towards the chasing tiger to save themselves. RIP.",
        "15": "{p1} grabbed a pickaxe and put it through the teeth of {p2}."
      },
      "death": {
        "-1": "{p1} was killed by a falling meteorite",
        "0": "{p1} set up {p1_3} camp in a tall tree, but ended up falling down and shattering every single bone in {p1_3} body.",
        "1": "{p1} fell from a high place",
        "2": "{p1} tried to swim in lava",
        "3": "{p1} died of laughter",
        "4": "{p1} was drowned in gold coins that {p1_1} found.",
        "5": "{p1} got killed by an evil spirit because of {p1_3} good looks.",
        "6": "{p1} was too slow to avoid a panther\u2019s claw strikes. The gold coins in {p1_3} pocket sure were heavy!",
        "7": "{p1} was singing so loudly that {p1_1} woke up a giant grizzly bear. One slap by it\u2019s paw caused {p1_2} to die.",
        "8": "{p1} gave up living and buried {p1_2}self in the ground.",
        "9": "{p1} was unaware that hundreds of leeches were stuck on {p1_3} lower half while swimming in the swamp. RIP.",
        "10":" {p1} was the imposter. Sus.",
        "11": "God looked at {p1} and realized what an ugly creation he had made and destroyed his creation.",
        "12": "{p1} stepped on a lego.",
        "13": "{p1} tried to outpizza the hutt.",
        "14": "{p1} attempted to tame a wolf but was eaten instead.",
        "15": "{p1} got horsed."
      },
      "life": {
        "0": "{p1} cried during the show. A sponsor sent supplies to cheer {p1_2} up.",
        "1": "{p1} managed to catch three fish, but had to eat them raw because there was no fire to cook them on.",
        "2": "{p1} was meditating under the waterfalls.",
        "3": "{p1} was reminiscing the old days."
      },
      "revive": {
        "-1": "A sponsor used the time stone and revived {p1}",
        "0": "{p1} found out {p1_1} had an extra life.",
        "1": "{p1} is back in the game and ready to rumble!!",
        "2": "{p1} had one drink from the spring of life. Turns out that it can bring back the dead.",
        "3": "{p1} simply said \"no\" to death",
        "4": "{p1} is actually the main character and was revived with the power of plot armor.",
        "5": "{p1}\u2019s skeleton arose vowing to give {p1_3} killer a bad time!",
        "6": "{p1} had a totem of undying."
      },
      "bow": {
        "0": "Did {p1} just hit a no-scope with {p1_3} {item} on {p2}? What a champ!",
        "1": "{p1} found {p2} sleeping on the ground and shot {p2_2} with {p1_3} super epic {item}.",
        "2": "{p1} killed {p2} with {p1_3} {item}, \"Hey oops, didn\u2019t see you there.\"",
        "3": "{p1} used {p1_3} {item} and sniped {p2} on the ankle with {p1_3} poisonous arrows.",
        "4": "{p1} tried to land a headshot with {p1_3} {item} but hit {p2}\u2019s groin instead. \"Well, you died anyway.\"",
        "5": "{p1} was out of arrows, so {p1_1} used the bowstrings of {p1_3} {item} to choke {p2} to death."
      },
      "dagger": {
        "0": "{p1} threw a crazy throwing {item} hit on {p2}, thus killing {p2_2}.",
        "1": "{p1} stabbed and choked {p2} with {p1_3} {item} after {p2_1} tried to run away.",
        "2": "{p1} stabbed {p2} 234 times with {p1_3} {item}.",
        "3": "{p1} showed {p2} {p1_3} {item}, it got quite personal.",
        "4": "After {p2} fell asleep, {p1} used {p1_3} {item} to slit {p2_3} throat."
      },
      "wolf": {
        "0": "After a long chase {p1}\u2019s {item} finally caught up to {p2} and bludgeoned {p2_2} to death.",
        "1": "{p1}\u2019s {item}: Charlie, bit {p2}.",
        "2": "{p1}\u2019s {item} howled, calling reinforcement from their pack to kill {p2}.",
        "3": "{p1} was lucky that {p1_3} {item} has sharp senses. It immediately noticed that {p2} was hiding behind a tree.",
        "4": "{p1}\u2019s {item} clawed {p2} on {p2_3} face.",
        "5": "{p1}\u2019s fat {item} pursued {p2} for 69 minutes tirelessly. It finally captured {p2_2} for its dinner.",
        "6": "{p1} put sausages in the bag of {p2} who was hunted by {p1_3} {item}, eating both {p2_2} and the sausages."
      },
      "machete": {
        "0": "{p1} used {p1_3} {item} to crack open a coconut, which landed on {p2}, thus killing {p2_2}.",
        "1": "{p1} hacked {p2} into 69 pieces with {p1_3} {item}.",
        "2": "{p1} threw {p1_3} {item} at {p2}, thus killing {p2_2}.",
        "3": "{p1} unsheathed {p1_3} {item} at a blinding speed and slashed {p2}\u2019s body in half without {p2_2} even noticing.",
        "4": "{p1} chopped {p2}\u2019s head with a {item} by accident; {p1_1} {p1_w} only trying to clear the vines ahead.",
        "5": "{p1} dodged {p2}\u2019s sneak attack, drew {p1_3} {item} and killed {p2_2} in one swing."
      },
      "spear": {
        "0": "{p1} destroyed {p2}\u2019s reproductive organs with a stab of {p1_3} {item}. R.I.P.",
        "1": "{p1} might be an olympic javelinist as {p1_1} just killed {p2} with {p1_3} {item} at the distance of 25m.",
        "2": "{p1} randomly threw a {item} in the air and it somehow killed {p2}.",
        "3": "{p1} YEETED {p1_3} {item} at {p2}, thus killing {p2_2}.",
        "4": "With a MASSIVE YEET, {p1} threw {p1_3} {item} right through {p2}."
      },
      "axe": {
        "0": "{p1} threw {p1_3} {item} at {p2}.",
        "1": "{p1} threw {p1_3} {item} right at {p2}\u2019s head, splitting it in half.",
        "2": "{p1}\u2019s {item} hit {p2} in the arm; {p2_1} died of the poison later that night.",
        "3": "{p1} sneaked behind {p2}\u2019s back and slit {p2_2} open with {p1_3} {item}.",
        "4": "{p1} was {item} yeeting champion of rumble, and proved it to {p2} by imbedding it in {p2_3} head!"
      }
    },
    "modern": {
      "kill": {
        "-1": "{p1} out-smarted {p2} by leading {p2_2} into {p2_3} own death trap",
        "0": "{p1} had successfully camouflaged themselves in a duck suit and rammed {p2} to the wall. R.I.P.",
        "1": "{p1} choked {p2} with a fishing line.",
        "2": "{p1} pushed {p2} into a shark tank. The ending was very bloody.",
        "3": "{p1} found a sledgehammer and BASHED {p2}\u2019s brains in.",
        "4": "{p1} rickrolled {p2}."
      },
      "death": {
        "0": "{p1} died from stress.",
        "1": "{p1} had an epileptic seizure due to lack of sleep.",
        "2": "{p1} was too anxious to go out, {p1_1} starved {p1_2}self to death.",
        "3": "{p1} found a landmine and picked it up. I wonder what happened after that...?",
        "4": "{p1} displeased God.",
        "5": "{p1} fell off the edge of the earth.",
        "6": "{p1}.exe has stopped working.",
        "7": "{p1} failed the MLG water bucket.",
        "8": "{p1} slipped on a banana peel and hit {p1_3} head on a rock.",
        "9": "{p1} tried to sleep in the nether.",
        "10": "{p1} slipped on a banana peel and cracked {p1_3} skull open. Who left that there?"
      },
      "knife": {
        "0": "{p1} killed {p2} and lacerated the remains with {p1_3} {item}.",
        "1": "{p1} amputated {p2}\u2019s leg with {p1_3} {item}, but unfortunately {p2_1} bled out.",
        "2": "After {p1} defeated {p2} with {p1_3} {item}, {p1_1} scalped the corpse.",
        "3": "{p1} felt pleasure as {p1_1} amputated {p2}\u2019s limbs one by one with {p1_3} {item}.",
        "4": "{p1} could not hold back {p1_3} laughter when {p1_1} amputated {p2}\u2019s left bollock with {p1_3} {item}.",
        "5": "{p1} brutally scalped {p2}\u2019s head with {p1_3} {item} and left the victim skinless with a horde of maggots eating {p2_2}.",
        "6": "{p1} made a jagged wound around {p2}\u2019s lungs with a {item}, {p1_1} must be a viking."
      },
      "pistol": {
        "0": "{p1}\u2019s bullet from {p1_3} {item} into {p2}\u2019s bollocks was enough to be fatal.",
        "1": "{p1} shot {p2} off a building with {p1_3} {item}. The body splatted to the ground.",
        "2": "{p1} won against {p2} in Russian Roulette. Turns out the {item} only shoots once.",
        "3": "Despite being a terrible shot, {p1} finally managed to hit {p2} with {p1_3} {item}. It only took 52 shots... or was it 53?",
        "4": "While {p1} was practicing in a firing range, despite all the safety measures, {p1_1} managed to kill {p2} with {p1_3} {item}.",
        "5": "{p1} shot {p2} in the head with {p1_3} {item} as {p1_1} couldn\u2019t beat {p2_2} in a street fight.",
        "6": "{p1} threw {p1_3} {item} off a cliff and killed {p2}. That is not how you use a gun but it worked.",
        "7": "{p1} mistook {p2} as a shooting target after 36 {item}-shots to the chest, {p1_1} later fled after realizing."
      },
      "sniper": {
        "0": "{p1} had experience playing shooter games and sniped {p2} from afar with {p1_3} {item}!",
        "1": "{p1} jumped of a tower and pulled off a SICK mid-air 360 no-scope on {p2} with {p1_3} {item}. Wow.",
        "2": "{p1} used aimbot on {p1_3} {item} to cheaply kill {p2}.",
        "3": "{p1} got fully reloaded {p1_3} {item} and triggered all bullets in the head of {p2}.",
        "4": "{p1} was spinbotting and killed {p2} with {p1_3} {item}.",
        "5": "After {p1} waited over 12 hours on top of a high rise, {p2} finally appears and was headshot by the {item}.",
        "6": "{p1} did a sick 360 noscope and shot {p2} in the head with {p1_3} {item}. Ez."
      },
      "bat": {
        "0": "{p1} smashed {p2} into outer-space with {p1_3} {item}.",
        "1": "{p1} smacked {p2} round the head with {p1_3} {item} during {p1_3} failed home invasion.",
        "2": "{p1} threw {p1_3} {item} off the window and it landed directly on {p2}.",
        "3": "{p1} sent {p2} to horny jail with {p1_3} {item}.",
        "4": "{p1} absolutely DOMED {p2} with {p1_3} {item}!"
      },
      "revive": {
        "0": "The gods took pity on {p1} and revived {p1_2}.",
        "1": "{p1} was blessed with a second life.",
        "2": "{p1} remembered that last meme {p1_1} needed to post.",
        "3": "{p1}\u2019s family did not have enough money to pay for {p1_3} grave.",
        "4": "{p1} has unfinished business.",
        "5": "{p1} had an uno reverse card when {p1_1} died."
      },
      "life": {
        "-1": "{p1} found a hidden treasure chest",
        "0": "{p1} went to the gym to train {p1_3} muscles.",
        "1": "{p1} studied a survival manual and learned a few new tricks.",
        "2": "{p1} played a perfect game of pac-man :0",
        "3": "{p1} was given a choice, red pill or blue pill.",
        "4": "{p1} started talking to {p1_2}self, how wholesome... probably?..right?",
        "5": "{p1} thought about breathing, and now can\u2019t do it automatically anymore.",
        "6": "{p1} questioned the meaning of life."
      },
      "taser": {
        "0": "{p1} shot {p2} right in the heart with {p1_3} {item}.",
        "1": "{p1} used {p1_3} {item} to delivered a shock to {p2}\u2019s chest; {p1_1} died from cardiac arrest.",
        "2": "{p1} found out {p1_3} {item} isn\u2019t meant to kill after {p1_1} hit {p2}. What followed after was a... brutal scene.",
        "3": "{p1} stunned {p2} with {p1_3} {item}, then curb stomped {p2_2}",
        "4": "{p1} was out of charges with {p1_3} {item}, so {p1_1} pistol whipped {p2} with it instead."
      },
      "rocket": {
        "0": "{p1} blew {p2} right through the wall with {p1_3} {item}.",
        "1": "As {p1} was cleaning {p1_3} {item}, it accidentally went off and killed {p2}.",
        "2": "{p1}\u2019s {item} went BOOOOMMM!! Rip {p2}.",
        "3": "{p1} fired a rocket at {p2}\u2019s secret base with {p1_3} {item}. As the building collapsed, {p2_1} {p2_w} crushed to death.",
        "4": "{p1} forgot how to use the {item} and shot it backwards, but {p2} was behind {p1_2}.",
        "5": "{p1} shot {p2} with {p1_3} {item}... shattering {p2_3} body in, many, many pieces.",
        "6": "{p1} discovered the destructive power of a {item} when {p1_1} fired it at {p2}."
      }
    },
    "futuristic": {
      "kill": {
        "-1": "{p1} gathered some scrap to make a bomb; {p2} never saw that coming.",
        "0": "{p1} hacked into {p2}\u2019s nano tech causing it to malfunction and electrocute the wearer.",
        "1":"{p1} was able to defeat {p2} in what might\u2019ve been one of the mech arena\u2019s best matches!",
        "2":"{p1} was crowned the mech arena champion after an easy win over {p2}.",
        "3":"{p1}\u2019s fight bot killed {p2} in a heated bot battle.",
        "4":"{p1} sabotaged {p2}\u2019s escape pod as {p2_1} {p2_w} trying to flee causing {p2_2} to be sucked into space upon launch.",
        "5":"{p1} had the high ground and stopped {p2} from joining the dark side.",
        "6":"{p1} shot down {p2}\u2019s fighter ship sending {p2_2} spiraling downwards.",
        "7":"{p1} launched {p2} out of the spacecraft after {p1_1} pointed out to the crew that {p2_1} might be an imposter."
      },
      "death": {
        "-1": "{p1}\u2019s ancestors came back to life and killed {p1_2}.",
        "0": "{p1} tried sprinting through a laser field without triggering the alarm... and failed miserably.",
        "1": "{p1} flew {p1_3} skimmer at high speed into a force field.. {p1_1} {p1_w} slain when {p1_3} credentials didn\u2019t check out.",
        "2": "{p1} moved into an irradiated flat and died in agony several hours later.",
        "3": "{p1} thought {p1_1} could escape from a maximum security science lab, but ended up dissected instead.",
        "4": "{p1} didn\u2019t understand the idea of \"allergies\" and wanted to try one out. Unfortunately, {p1_1} died from ingesting {p1_3} allergen.",
        "5": "{p1} was slain by a rogue fighter bot at the underground boxing ring for \"saying things\" about the bot\u2019s maker.",
        "6": "{p1} was attacked by an alien swarm, {p1_1} didn\u2019t even stand a chance.",
        "7": "{p1} forgot to refill {p1_3} ship before takeoff, it ran out of fuel mid flight and ironically crashed into a refueling station.",
        "8": "{p1} didn\u2019t feed {p1_3} robodog, it decided to feed on {p1_2} instead.",
        "9": "For some reason {p1} thought {p1_1} didn\u2019t need any training to fly a spacecraft. It didn\u2019t end well."   
      },
      "emp": {
        "0": "{p1} threw an {item} at {p2} causing {p2_3} exo suit to malfunction and move {p2_3} body into undesirable positions.",
        "1": "{p1} tossed {p1_3} {item} into the passenger seat of {p2}\u2019s car causing {p2_2} to crash!",
        "2": "{p1} did an epic trickshot when {p1_3} {item} bounced off the wall and hit {p2} knocking {p2_2} off {p2_3} hoverboard.",
        "3": "{p1} accidently dropped {p1_3} {item} while flying, unfortunately {p2} was underneath and the impact broke {p2_3} skull.",
        "4": "{p1}\u2019s {item} pulse caused {p2}\u2019s mech-suit to malfunction, activating self-destuct protocol."
      },
      "blaster": {
        "0": "{p1} uses {p1_3} {item} to put a hole straight through {p2}\u2019s chest.",
        "1": "After dodging their enemies attack, {p1} is able to flip around and blast {p2} directly with {p1_3} {item}",
        "2": "{p1} moved silently and snuck up on {p2} taking {p2_2} out with a single blast from {p1_3} {item}. Just like in the simulation.",
        "3": "{p1}\u2019s {item} overheated, but that wasn\u2019t a problem... {p1_1} smacked {p2} with the end of it knocking {p2_2} unconscious before finishing {p2_2} off.",
        "4": "{p1} was aiming for another tribute when {p1_1} fired {p1_3} {item} but unfortunately for {p2} {p2_1} walked right into the line of fire. How silly of {p2_2}!",
        "5": "{p1} shot {p2} with {p1_3} {item} causing {p2_2} to stumble and fall in defeat"
      },
      "robot": {
        "0": "{p1} equipped {p1_3} {item} with a laser cannon, which proved itself effective when it turned {p2} into ash.",
        "1": "{p1}\u2019s {item} was built like a tank, at least it hit like one when it charged into {p2} knocking {p2_2} into the next galaxy.",
        "2": "{p1}\u2019s {item} grabbed {p2} and flew into the Stratosphere. The lack of oxygen got to {p2_2} and {p2_1} couldn\u2019t survive the trip.",
        "3": "{p1}\u2019s {item}, weighing in at 3000 pounds, didn\u2019t even give {p2} a chance when it simply jumped down crushing {p2_2} underneath it\u2019s weight.",
        "4": "{p1}\u2019 {item} killed {p2} because {p2_1} {p2_w} unable to find cover in time."
      },
      "drone": {
        "0": "{p1} sent {p1_3} {item} to fly right through {p2}.",
        "1": "{p1} used {p1_3} exploding {item} to blow {p2} up.",
        "2": "{p1} sent {p1_3} {item} to use its lasers against {p2}. RIP.",
        "3": "During a drone race, {p1}\u2019s {item} misfired and killed {p2}.",
        "4": "{p1} was trying to mine an asteroid with {p1_3} {item}. {p1_1} missed and destroyed a small planet, including {p2}!"
      },
      "lasergun": {
        "0": "{p1} used {p1_3} {item} to leave a hole in {p2}\u2019s skull.",
        "1": "{p1} used {p1_3} {item} without reading the manual, killing {p2} on accident.",
        "2": "{p1} hit {p2} with a sick 360 no-scope! I thought that only happened in video games!",
        "3": "{p1} couldn\u2019t figure out how to turn off {p1_3} {item} and accidentally cut {p2} in half with the beam!",
        "4": "{p2} tried using {p1}\u2019s {item}, but it was rigged to explode!"
      },
      "sword": {
        "0": "{p1} used the plasma power of {p1_3} {item} to demolish {p2}.",
        "1": "{p1}\u2019s {item} was too hot to handle for {p2}.",
        "2": "{p1} fried {p2} with {p1_3} super hot & sexy & powerful & strong {item}!",
        "3": "{p1} completely eviscerated {p2} with {p1_3} {item}!",
        "4": "{p1} sliced {p2} into paper-thin strips with {p1_3} {item}!"
      },
      "revive": {
        "0": "While {p1} remains dead, {p1_3} clone lives on. Rejoice!",
        "1": "{p1} was rushed to a regen chamber, where doctors were able to successfully resuscitate {p1_2} after extensive work.",
        "2": "{p1} decided {p1_1}\u2019d played possum long enough and got up to walk it off.",
        "3": "{p1} used {p1_3} token for an extra life.",
        "4": "{p1} paid Hyperion half {p1_3} life savings so {p1_1} could respawn at a New-U station."
      },
      "life": {
        "0": "{p1} was surfing the wayback and found information on a bot called \"Royale Rumble\" how strange.",
        "1": "{p1} did some research, apparently 2012 wasn\u2019t the end.",
        "2": "{p1} decided to go to the new moon hotel and relax.",
        "3": "{p1} attended a flat-Earth conference!",
        "4": "{p1} decided to actually breathe manually for once... incredible"
      }
    },
    "medieval": {
      "kill": {
        "-1": "{p1} drowned {p2} in the castle\u2019s moat",
        "0": "{p1} heard a voice, believing \u2019twere {p2}. Aye, was. {p2_1} is now dead.",
        "1": "{p1} put {p2} down during the crusade to survive.",
        "2": "{p1} killed {p2}. \"Sorry, \u2019twere either thou or me\".",
        "3": "{p1} found the dying {p2} by the river. {p1_1} put \u2019em out of {p2_3} misery by giving \u2019em a quick death.",
        "4": "{p1} saw {p2} trying to steal {p1_3} wench. Sadly, that didn\u2019t fare well.",
        "5": "{p1} gave {p2} some water to drink. {p2_1} didn\u2019t know \u2019twas poisoned though."
      },
      "death": {
        "0": "{p1} was suffocated by the gold coins that {p1_1} found.",
        "1": "{p1} was dragged into hell by an evil spirit because of {p1_3} unholy activities.",
        "2": "{p1} was too slow to evade a bear\u2019s claw strikes. The gold coins in {p1_3} pocket sure were hefty!",
        "3": "{p1} never expected the Spanish Inquisition!",
        "4": "{p1} seems to have discovered the plague.",
        "5": "{p1} attempted to tame a wolf, but failed miserably.",
        "6": "{p1} danced with the devil. rip"
      },
      "life": {
        "-1": "{p1} was 100% sure that they saw something flying in the sky",
        "0": "{p1} bought Cracow shoon.",
        "1": "{p1} accused a pig of murdering {p1_3} beloved ones. The pig went on trial and was found guilty.",
        "2": "{p1} fared to catch three fish, yet had to eat \u2019em raw because there was no fire to cook \u2019em on.",
        "3": "{p1} discovered science.",
        "4": "{p1} went on a quest for the Holy Grail.", 
        "5": "{p1} invented the Anno Domini calendar."
      },
      "revive": {
        "0": "God decided to bring {p1} back because of the courage {p1_1} show\u2019d during the crusades.",
        "1": "{p1} is back in the game and content to rumble!!",
        "2": "{p1} had one posset from the spring of life. turns out that it bring back the dead.",
        "3": "{p1} truly quoth \"no\" to the devil.",
        "4": "{p1} quoth no to the plague.",
        "5": "{p1}\u2019s skelekton arose vowing to grant {p1_3} killer an ill time!"
      },
      "crossbow": {
        "0": "{p1} used {p1_3} {item} and shot {p2} in their arm with a poisonous arrow. {p2_1} died.",
        "1": "{p1} ran out of arrows so {p1_1} used {p1_3} {item} to beat {p2} to death.",
        "2": "{p1}\u2019s {item} shot that killed {p2} was so good that it earned \u2019em the title of \"crossbow king\".",
        "3": "{p1} used 3 arrows presently in {p1_3} {item}. one of \u2019em hit {p2} in the heart.",
        "4": "{p1} strangled {p2} to endless sleep with the string of {p1_3} {item}."
      },
      "mace": {
        "0": "{p1}\u2019s {item} got stuck in {p2}\u2019s body. {p2_1} died 2 hours later because {p2_1} lost too much blood.",
        "1": "{p1} smashed {p2} to hell with {p1_3} {item}.",
        "2": "{p1} smashed {p2} into literal dust with {p1_3} {item}. yikes.",
        "3": "{p1}\u2019s {item} made {p2} see the white light.",
        "4": "{p1} took out all {p1_3} pent up rage on {p2}. The only thing left was a bloody puddle."
      },
      "horse": {
        "0": "After a long chase {p1}\u2019s {item} finally caught up to {p2} and slaughtered \u2019em to death. ironic.",
        "1": "{p1} was thrifty that {p1_3} {item} hath sharp senses. it presently noticed that {p2} was hiding behind a tree. Rip",
        "2": "{p1}\u2019s {item} bit {p2}\u2019s hand off. {p2_1} died minutes later.",
        "3": "{p1}\u2019s chunky {item} pursued {p2} for 21 minutes tirelessly through the woodlands. It finally caught up and killed \u2019em.",
        "4": "{p1}\u2019s {item} was so quick that {p2} didn\u2019t see their passing coming. wow."
      },
      "halberd": {
        "0": "{p1} stuck {p1_3} {item} right up {p2}\u2019s... welp. RIP",
        "1": "{p1}\u2019s {item} got stuck in {p2}, {p2_1} couldn\u2019t move because of it. {p2_1} later died of starvation.",
        "2": "{p1} charged at {p2} with {p1_3} {item}, pinning {p2_2} to a tree for the rest of {p2_3} short life.",
        "3": "{p1} spun in circles with {p1_3} {item}, {p2} was unfortunate enough to walk right into it.",
        "4": "{p1} used {p1_3} {item} like a spear and launched it deep into {p2}."
      },
      "shield": {
        "0": "{p1} tried to push {p1_3} {item} in {p2}\u2019s throat. Suprisingly {p2_1} didn\u2019t survive that.",
        "1": "{p1} spun {p1_3} {item} towards {p2} like a boomerang. RIP.",
        "2": "{p1} smashed {p1_3} {item} into {p2}\u2019s face. Repeatedly.",
        "3": "{p1} attached spikes to {p1_3} {item} and used it to fill {p2} with holes!",
        "4": "With rage that surpassed anything seen before, {p1} reduced {p2} to a chunky puddle with {p1_3} {item}."
      },
      "lance": {
        "0": "{p1} surprised {p2}\u2019s rump with a punch of {p1_3} {item}. R. I. P.",
        "1": "the rumors were true, {p1}\u2019s {item} was marry most big. sadly {p2} had to find out the hard way.",
        "2": "{p1}\u2019s {item} left a huge hole in {p2}\u2019s chest",
        "3": "{p1} dodged {p2}\u2019s sneak attack, drew {p1_3} {item} and killed \u2019em in one paunch.",
        "4": "In a jousting tournament to the death, {p1} sheathed {p1_3} {item} all the way to the hilt in {p2}\u2019s gut."
      }
    },
    "pirate": {
      "kill": {
        "0": "{p1} caught {p2} tryin\u2019 to instigate a mutiny an\u2019 ordered {p2_3} execution",
        "1": "{p1} pushed {p2} off the ship into the deep sea.",
        "2": "{p1} pinned {p2} to the wall using sharpened human bones.",
        "3": "{p1} killed {p2}, as {p2_1} wouldn\u2019 give {p1_2} the map {p2_1} found.",
        "4": "{p1} pushed {p2} off the crow\u2019s nest"
      },
      "death": {
        "0": "{p1} didn\u2019t survive this sea battle.",
        "1": "{p1} fell fer the sirens singin\u2019 an\u2019 jumped into the ocean.",
        "2": "{p1} was killed by the kraken.",
        "3": "{p1} loaded a bomb into a cannon. That didn\u2019 work out very well.",
        "4": "{p1} actually found Moby Dick. Poor guy.",
        "5": "{p1} was so thirsty, {p1_1} drank sea water. It didn\u2019 help \u2019em much.",
        "6": "{p1} invented Russian roulette, except you can\u2019t play that with a blunderbuss!",
        "7": "The sharks were happy to welcome {p1} into their kingdom."
      },
      "life": {
        "-1": "{p1} tried some of the spices that were imported from Asia.",
        "0": "{p1} tried to tame themselves a parrot.",
        "1": "{p1} tried to hire a crew.",
        "2": "{p1} searched the horizon for land.",
        "3": "{p1} tried to understand the map {p1_1} found.",
        "4": "{p1} tried to invent something useful.",
        "5": "{p1} tried to buy a new ship."
      },
      "revive": {
        "0": "{p1} found a way to survive and came back to take revenge.",
        "1": "{p1} was held back by the mayas curse. Will {p1_1} ever find peace?",
        "2": "Turned out {p1} had faked {p1_3} death.",
        "3": "{p1} was brought back to serve on a ghost ship!",
        "4": "{p1} escaped death by finding a cursed ship."
      },
      "blunderbuss": {
        "0": "{p1} threw {p1_3} {item} high in the sky. When it hit the ground it automatically fired and shot {p2}.",
        "1": "{p1} managed to miss two shots before {p1_1} finally hit {p2} with {p1_3} {item}.",
        "2": "{p1} had filled {p1_3} {item} with only gun powder and used it in the melee to burn a hole into {p2}\u2019s face.",
        "3": "{p1} boobytrapped a door with {p1_3} {item}. {p2} got a face full of lead soon after.",
        "4": "{p1}\u2019s {item} misfired, hitting {p1_3} first mate {p2}. RIP"
      },
      "sickle": {
        "0": "{p1} hit {p2} with the back of {p1_3} {item} on the head.",
        "1": "{p1} sliced {p2}\u2019s head right off with {p1_3} {item}",
        "2": "{p1} forgot to sharpen {p1_3} {item}. {p2} wished {p1_1} had.",
        "3": "{p1} planted {p1_3} {item} firmly in {p2}\u2019s skull. Ouch.",
        "4": "{p1}\u2019s {item} slid right out of {p1_3} hand and stabbed a nearby {p2}"
      },
      "bomb": {
        "0": "{p1} gave {p2} {p1_3} lit {item}, after {p2_1} kept begging to see it.",
        "1": "{p1} lit {p1_3} {item} next to the gunpowder barrels. It blew {p2}\u2019s ship into tiny little pieces.",
        "2": "{p1} was able to get {p2} drunk enough to believe that the {item} {p1_1} gave {p2_2} was a coconut.",
        "3": "{p1} aimed well when {p1_1} threw {p1_3} {item} through {p2}\u2019s window.",
        "4": "{p1} stuffed {p1_3} {item} into {p2}\u2019s mouth and lit it."
      },
      "parrot": {
        "0": "{p1}\u2019s {item} dove fast as an arrow as it dug its claws into {p2}\u2019s face an\u2019 threw {p2_2} off {p1_3} ship.",
        "1": "{p1}\u2019s {item} blinded {p2}. {p2_1} didn\u2019 survive long without {p2_3} eyes.",
        "2": "{p1}\u2019s {item} dug a hole into {p2}\u2019s stomach while {p1_1} were sleepin.",
        "3": "{p1} used {p1_3} {item} to beat {p2} to death.",
        "4": "{p1} stuffed {p1_3} {item} into {p2}\u2019s mouth and choked {p2_2} to death."
      },
      "cutlass": {
        "0": "{p1} dismembered {p2} piece by piece with {p1_3} {item}!",
        "1": "{p1} cut down {p2} with one swing of {p1_3} {item}.",
        "2": "{p1} didn't sharpen {p1_3} {item}, resulting in the brutal beating of {p2}!",
        "3": "{p1} and {p2} were running from the royal guard when {p1} sliced {p2}\u2019s knee with {p1_3} {item}. Twere you or me matey!",
        "4": "{p1} accidentally knocked {p2} into the ocean with flat side of {p1_3} {item}!"
      },
      "cannon": {
        "0": "{p1} replaced {p2}\u2019s head with a cannonball from {p1_3} {item}!",
        "1": "{p1} used a long fuse to delay {p1_3} {item}. It went off right when {p2} opened the door!",
        "2": "{p1} blasted {p2} with {p1_3} {item} while {p2_1} {p2_w} swabbing the deck!",
        "3": "{p1}\u2019s {item} tore through {p2}\u2019s ship, dragging {p2_2} into the depths of the sea.",
        "4": "{p1} fired bait out of {p1_3} {item}, attracting a kraken to {p2}\u2019s ship!"
      }
    },
    "samurai": {
      "kill": {
        "0": "{p1} drowned {p2} in a koi pond.",
        "1": "{p1} snuck up behind {p2}. That didn\u2019t end quite well.",
        "2": "{p1} crushed {p2} with a massive bear hug. Oops.",
        "3": "{p1} killed {p2} in {p2_3} sleep. Such a disgrace.",
        "4": "{p1} and {p2} played Shogi to decide who died. {p2} lost."
      },
      "death": {
        "0": "{p1} had a conflict with a samurai. It did not last long.",
        "1": "{p1} didn\u2019t know that too much anime is unhealthy.",
        "2": "{p1} attempted to assassinate the Emperor. The royal guard made quick work of {p2_2}.",
        "3": "{p1} tried preparing pufferfish, but didn\u2019t remove the venom properly.",
        "4": "{p1} sliced an artery while trying to prepare sushi."
      },
      "revive": {
        "0": "No one expected {p1} to hop out of {p1_3} grave.",
        "1": "{p1} sang so loud that the gods decided to send {p1_2} back to Earth.",
        "2": "{p1} was simply too powerful to stay dead.",
        "3": "As a reward for {p1_3} honorable death, {p1} was brought back to life.",
        "4": "The Emperor took pity on {p1} and granted {p1_2} a second chance."
      },
      "life": {
        "0": "{p1} fed the koi.",
        "1": "{p1} started writing their own manga.",
        "2": "{p1} spent {p1_3} day admiring the samuraiese Blossoms.",
        "3": "{p1} trained with their sensei.",
        "4": "{p1} played a game of Go."
      },
      "katana": {
        "0": "{p1} beheaded {p2} with {p1_3} {item}.",
        "1": "{p1} slaughtered {p2} with {p1_3} razor-sharp {item} and a vicious look.",
        "2": "{p1} reduced {p2} to pieces with {p1_3} {item} before {p2_1} even drew {p2_3} own weapon.",
        "3": "With one smooth swing of {p1_3} {item}, {p1} turned {p2} into mincemeat.",
        "4": "{p1} was tasked with killing {p2} with {p1_3} {item}. {p1_1} was proud to complete the assignment."
      },
      "shuriken": {
        "0": "{p1} cut down {p2} with a well-placed {item} in the back.",
        "1": "{p1} crippled {p2} with a {item} to the leg and left {p2_2} to die.",
        "2": "With an expert flick of the wrist, {p1} sent {p1_3} {item} straight through {p2}\u2019s spinal cord.",
        "3": "{p1} had to use several {item} to finally stop {p2}!",
        "4": "{p1} and {p2} took turns throwing {item} at each other. {p1} won."
      },
      "yumi": {
        "0": "{p1} set {p2} ablaze with a flaming arrow from {p1_3} {item}.",
        "1": "{p1}\u2019s {item} broke, sending shards into {p2}\u2019s eyes. Good thing {p1_1} had a backup.",
        "2": "{p1} used {p1_3} {item} to shoot an apple off {p2}\u2019s head. Well, tried to...",
        "3": "{p1} used the string from {p1_3} {item} to choke {p2} to death.",
        "4": "{p1} used the wood from {p1_3} {item} to beat {p2} to a pulp."
      },
      "blowpipe": {
        "0": "{p1} shot {p2} with a poisoned dart from {p1_3} {item}. It was a slow and painful death.",
        "1": "{p1} hid in a tree with {p1_3} {item}. {p2} never saw {p2_3} killer.",
        "2": "{p1}\u2019s {item} got clogged, so {p1_1} beat {p2} with it instead.",
        "3": "{p1} didn\u2019t know {p2} was in front of {p1_2} when {p1_1} cleared the barrel of {p1_3} {item}.",
        "4": "{p1} filled {p1_3} {item} with sand and blinded {p2}. Then beat {p2_2} to death."
      },
      "tessen": {
        "0": "{p1} sliced {p2} in half with {p1_3} razor sharp {item}!",
        "1": "{p1} killed {p2} with one million scratches of {p1_3} {item}. Must have taken a while.",
        "2": "{p1} caught {p2} sleeping, so {p1_1} put {p2_2} down easy.",
        "3": "{p1} threw {p1_3} {item} like a frisbee, going straight though {p2}\u2019s chest!",
        "4": "With a swish of {p1_3} wrist, {p1} began cutting {p2} into bite sized chunks."
      },
      "nunchaku": {
        "0": "{p1} whipped {p1_3} {item} around so fast it broke {p2}\u2019s bones in an instant!",
        "1": "{p1} got behind {p2} and broke {p2_3} spine with a well aimed hit of {p1_3} {item}.",
        "2": "Twirling {p1_3} {item} around with ease, {p1} broke {p2}\u2019s arms and legs, leaving {p2_2} to die.",
        "3": "{p1} got out of control spinning {p1_3} {item}, accidentally killing {p2} in the process!",
        "4": "{p1} wrapped {p1_3} {item} around {p2}\u2019s throat and squeezed, breaking it quickly."
      }
    },
    "steampunk": {
      "kill": {
        "0": "{p1} caught {p2} in an electrified net. {p2_1} unfortunately had a heart attack.",
        "1": "{p1} led {p2} into a room filled with toxic gas and locked {p2_2} in.",
        "2": "{p1} made brass knuckles that shoots steam out. {p1_1} showed it to {p2}\u2019s face.",
        "3": "{p1} absolutely destroyed {p2}",
        "4": "After stalking {p2_2} for days, {p1} ran {p2} down in {p1_3} new steam automobile."
      },
      "death": {
        "0": "{p1} caught one of several plagues currently going around. RIP",
        "1": "{p1} fell into the icy depths of the river Thames.",
        "2": "{p1} was found guilty and put to death by parliament.",
        "3": "{p1} was crushed by a falling piano!",
        "4": "{p1} forgot to turn off {p1_3} tesla coil and walked right into it.",
        "5": "{p1} ran out of air in {p1_3} underwater basketweaving course.",
        "6": "After long deliberation, {p1} decided to simply leave the battle.",
        "7": "{p1} was executed for asking why everything ran on steam and not something better."
      },
      "life": {
        "0": "{p1} burned down an orphanage. It was probably empty.",
        "1": "{p1} played a game of tennis.",
        "2": "{p1} joined the local rowing team.",
        "3": "{p1} decorated {p1_3} hat with a tesla coil.",
        "4": "{p1} built a whole steam powered suit of armor.",
        "5": "{p1} started a secret society!"
      },
      "revive": {
        "0": "{p1} implanted a pump into {p1_3} heart. When {p1_3} heart stopped, the pump took over.",
        "1": "It turns out {p1} could run on steam after all!",
        "2": "{p1} was brought back to life by a mad scientist.",
        "3": "{p1} was brought back in the form of a steam cyborg!",
        "4": "{p1} realized {p1_1} could just try again."
      },
      "cane": {
        "0": "{p1} rigged {p1_3} {item} with pressurized air. {p2}\u2019s organs exploded under the pressure.",
        "1": "{p1} stuck {p1_3} {item} into a tree. When {p2} rode by {p2_1} {p2_w} decapitated by the blade.",
        "2": "{p1} dueled {p2}, and brought {p1_3} {item} to the duel.",
        "3": "With a single swipe of {p1_3} {item}, {p1} slashed {p2}\u2019s skull open.",
        "4": "{p1}\u2019s {item} was coated in a potent poison. It only took one scratch to end {p2}."
      },
      "harpoon": {
        "0": "{p1} launched a {item} at {p2}. It missed, but {p2_1} still died I guess.",
        "1": "After heating {p1_3} {item} to 1000 degrees, {p1} melted {p2}\u2019s entire torso.",
        "2": "In a brutal fishing accident, {p1} pinned {p2} to a whale with {p1_3} {item}.",
        "3": "{p1} managed to nail {p2} from across the courtyard with {p1_3} {item}.",
        "4": "{p1} poisoned {p1_3} {item}, causing {p2} a swift death."
      },
      "hammer": {
        "0": "{p1} pulverized {p2} with {p1_3} giant {item}.",
        "1": "{p1}\u2019s {item} broke through the floor, killing {p2} in the room below.",
        "2": "{p1} was standing guard over {p2}. {p1_3} arms soon got tired and {p1_1} put {p1_3} {item} down on {p2}\u2019s head.",
        "3": "{p1} upgraded {p1_3} {item} with a steam boost, which flattened {p2} in a single swing.",
        "4": "{p1} bashed {p2}\u2019s chest in while trying to hit a nail with {p1_3} {item}."
      },
      "musket": {
        "0": "{p1} made {p1_3} {item} able to shoot plasma. The plasma liquified {p2}\u2019s brain in a split second.",
        "1": "{p1} shot pure electricity though {p1_3} {item}, causing {p2}\u2019s heart to stop.",
        "2": "{p1} used {p1_3} {item} as a club to beat {p2} to death.",
        "3": "{p1} shot {p2} through a wall, what a shot!",
        "4": "{p1} rammed {p1_3} {item} into {p2}\u2019s mouth and pulled the trigger. What an absolute mess!"
      }
    }
  }
}
